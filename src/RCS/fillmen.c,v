head	1.7;
access;
symbols
	pre-tilt-improve:1.6
	pre_surf_fromtop:1.6
	pre_neednewmap:1.6
	pre_apppluss_remove:1.6
	pre_tiltpair_chng:1.6
	pre_GPL:1.5;
locks;
comment	@ * @;


1.7
date	2018.12.07.17.03.31;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.18.16.59.58;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	96.04.19.19.48.36;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.07.11.17.28.11;	author mladjadj;	state Exp;
branches;
next	1.3;

1.3
date	95.02.02.18.37.02;	author liy;	state Exp;
branches;
next	1.2;

1.2
date	95.01.26.20.04.02;	author liy;	state Exp;
branches;
next	1.1;

1.1
date	94.11.23.10.14.00;	author leith;	state Exp;
branches;
next	;


desc
@removed from filtermen
@


1.7
log
@bollingers_email_and_cosmetic
@
text
@
/*$Header: /usr8/web/src/RCS/fillmen.c,v 1.6 2005/10/18 16:59:58 leith Exp $*/

/*
C++*********************************************************************
C
C fillmen
C
C **********************************************************************
C *  AUTHOR:  ArDean Leith                                                 *
 C=* FROM: WEB - VISUALIZER FOR SPIDER MODULAR IMAGE PROCESSING SYSTEM *
 C=* Copyright (C) 1992-2005  Health Research Inc.                     *
 C=*                                                                   *
 C=* HEALTH RESEARCH INCORPORATED (HRI),                               *   
 C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                  *
 C=*                                                                   *
 C=* Email:  spider@@wadsworth.org                                      *
 C=*                                                                   *
 C=* This program is free software; you can redistribute it and/or     *
 C=* modify it under the terms of the GNU General Public License as    *
 C=* published by the Free Software Foundation; either version 2 of    *
 C=* the License, or (at your option) any later version.               *
 C=*                                                                   *
 C=* This program is distributed in the hope that it will be useful,   *
 C=* but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 C=* General Public License for more details.                          *
 C=*                                                                   *
 C=* You should have received a copy of the GNU General Public License *
 C=* along with this program; if not, write to the                     *
 C=* Free Software Foundation, Inc.,                                   *
 C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.     *
 C=*                                                                   *
C **********************************************************************
C
C    fillmen
C
C    PURPOSE:         display filling menu
C
C    CALLED BY:       filtermen
C

C***********************************************************************
*/

#include <Xm/RowColumn.h>
#include <Xm/Text.h>
#include <Xm/Scale.h>
#include "common.h"
#include "routines.h"
#include "filter.h"

 /* external function prototypes */

 /* internal function prototypes */
 static void     fillmen_buta  (Widget, XtPointer, XtPointer);

 /* external common variables used here */

 /* common variables used here and elsewhere*/
 int             ixseed = 2;
 int             iyseed = 2;
 float           threshval, fillval;
 int             fillconnect = 4;

 static Widget   iw_fillmen = (Widget)0,   iw_ixseed = (Widget)0,
                 iw_iyseed = (Widget)0, iw_thresh = (Widget)0, 
	         iw_fillval = (Widget)0, iw_fillconnect =(Widget) 0;

/********************************  fillmen **************************/

 void fillmen(Widget iw_temp, XtPointer data, XtPointer call_data)
 { 
 char     cval[5], cval11[11],cval2[2];
 Widget   iw_rowcol, iw_rowcol1;
 Widget   iw_pushc, iw_pusha, iw_dums;

 if (iw_fillmen <= (Widget)0)
    {   /* create fill menu widget first */

    iw_fillmen = wid_dialog(iw_win,iw_fillmen,
                             "fill options",20,20);
    iw_rowcol   = wid_rowcol(iw_fillmen,'v',-1,-1);

    iw_rowcol1  = wid_rowcol(iw_rowcol,'h',-1,-1);
    /* create text box for ixseed input --------------------- ixseed */
    sprintf(cval,"%4d",ixseed);
    iw_ixseed = wid_textboxb(iw_rowcol1,0, "X SEED:",cval,4);

    /* create text box for iyseed input --------------------- iyseed */
    sprintf(cval,"%4d",iyseed);
    iw_iyseed = wid_textboxb(iw_rowcol1,0, "Y SEED:",cval,4);

    /* create text box for threshold -----------------------  thresh */
    /* must set default threshold */
    threshval = fminold + ((fmaxold - fminold) / 2.0);
    sprintf(cval11,"%f",threshval);
    iw_thresh = wid_textboxb(iw_rowcol,iw_thresh,"Threshold:",
                             cval11,10);

    /* create text box for fillval ------------------------  fillval */
    /* must set default fillval */
    fillval = fminold;
    sprintf(cval11,"%f",fillval);
    iw_fillval = wid_textboxb(iw_rowcol,iw_fillval,
                                "Fill value:",cval11,10);

    /* create text box for fillconnect ----------------  fillconnect */
    sprintf(cval2,"%1d",fillconnect);
    iw_fillconnect = wid_textboxb(iw_rowcol,iw_fillconnect,
                                "Connectivity:",cval2,1);

    /* create accept boxes  ---------------------------------- apply */
    iw_pushc = (Widget) 0;
    iw_pusha = (Widget) 0;
    wid_stdbut(iw_rowcol, iw_fillmen,
               &iw_dums, &iw_pushc, &iw_pusha, 
              "CA",fin_cb,fin_cb,fillmen_buta, NULL);
    }

 XtManageChild(iw_fillmen);
 }

 /*********************** fill accept button callback *****************/

 void fillmen_buta(Widget iw_temp, XtPointer data, XtPointer call_data)
 {
 char *         string;
 char           filtertype[2];

 if (strtoint(iw_ixseed,"X seed",&ixseed) == FALSE) return;

 if (strtoint(iw_iyseed,"Y seed", &iyseed) == FALSE) return;

 if (ixseed  < 1 || ixseed  > nsamold) 
    {
    spout("*** X seed range is: 1...nsam"); 
    return;
    }

 if (iyseed < 1 || iyseed > nrowold) 
    {
    spout("*** Y seed range is: 1...nrow"); 
    return;
    }

 if (strtoint(iw_fillconnect,"Connectivity",&fillconnect) == FALSE) return;
 if (fillconnect != 4 && fillconnect != 8) 
    {
    spout("*** Connectivity must be 4 or 8!"); 
    return;
    }

 /* find threshold */
 string = XmTextGetString(iw_thresh);
 sscanf(string,"%f",&threshval);
 if (threshval > fmaxold) threshval = fmaxold;
 if (threshval < fminold) threshval = fminold;
 if (string) free(string);

 /* find fillval */
 string = XmTextGetString(iw_fillval);
 sscanf(string,"%f",&fillval);
 if (string) free(string);

 XtUnmanageChild(iw_fillmen);

 filtertype[0] = 'x';
 filtertype[1] = '\0';
 filter_but(iw_temp, (XtPointer) filtertype, call_data);
 }

@


1.6
log
@GPL
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/fillmen.c,v 1.5 1996/04/19 19:48:36 leith Exp $*/
d51 1
d56 1
a56 1
 void                 fillmen_buta  (Widget, XtPointer, XtPointer);
a58 4
 extern char       outstr[80];
 extern float      fminnew, fmaxnew;
 extern float      fminold, fmaxold;
 extern int        nsamold, nrowold;
@


1.5
log
@changed to XtPointer
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/fillmen.c,v 1.4 1995/07/11 17:28:11 mladjadj Exp leith $*/
d11 23
a33 6
C *  COPYRIGHT (C)1993, WADSWORTH CENTER FOR LABORATORIES AND              *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
@


1.4
log
@static Widget = (Widget)0
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/fillmen.c,v 1.3 1995/02/02 18:37:02 liy Exp mladjadj $*/
d38 1
a38 1
 void                 fillmen_buta  (Widget, caddr_t, caddr_t);
d58 1
a58 1
 void fillmen(Widget iw_temp, caddr_t data, caddr_t call_data)
d62 1
a62 1
 Widget   iw_pushc, iw_pusha, iw_dums, iw_dum;
d102 3
a104 3
    iw_dum   = wid_stdbut(iw_rowcol, iw_fillmen,
                          &iw_dums, &iw_pushc, &iw_pusha, 
                        "CA",fin_cb,fin_cb,fillmen_buta, NULL);
d112 1
a112 1
 void fillmen_buta(Widget iw_temp, caddr_t data, caddr_t call_data)
d156 1
a156 1
 filter_but(iw_temp,(caddr_t) filtertype,call_data);
@


1.3
log
@modified (int)Widget again to keep web run on all machines
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/fillmen.c,v 1.2 1995/01/26 20:04:02 liy Exp liy $*/
d52 3
a54 2
 static Widget   iw_fillmen = 0,   iw_ixseed = 0,  iw_iyseed = 0,   
                 iw_thresh = 0,    iw_fillval = 0, iw_fillconnect = 0;
@


1.2
log
@modified (int)widget for Onyx
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/fillmen.c,v 1.1 1994/11/23 10:14:00 leith Exp liy $*/
d63 1
a63 1
 if (iw_fillmen <= (void *)0)
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/filtermen.c,v 1.26 94/11/18 13:56:56 leith Exp Locker: leith $*/
d63 1
a63 1
 if ((int)iw_fillmen <= 0)
@
