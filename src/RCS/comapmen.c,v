head	1.11;
access;
symbols
	pre-tilt-improve:1.10
	pre_surf_fromtop:1.10
	pre_neednewmap:1.10
	pre_apppluss_remove:1.9
	pre_tiltpair_chng:1.9
	pre_GPL:1.7;
locks;
comment	@ * @;


1.11
date	2018.12.07.17.03.31;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2011.09.15.16.53.18;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2007.11.20.20.32.14;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.18.16.59.43;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2000.08.21.19.41.24;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.10.08.13.46.12;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	97.08.06.17.58.13;	author liy;	state Exp;
branches;
next	1.4;

1.4
date	97.03.27.15.18.48;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.07.11.17.28.09;	author mladjadj;	state Exp;
branches;
next	1.2;

1.2
date	94.11.21.18.50.48;	author mladjadj;	state Exp;
branches;
next	1.1;

1.1
date	94.05.26.14.06.22;	author odesanya;	state Exp;
branches;
next	;


desc
@built by mladjadj for corr-map
@


1.11
log
@bollingers_email_and_cosmetic
@
text
@/*
************************************************************************
**  comapmen.c
**
**  WID_COMAPMEN.FOR (VAX) ported to UNIX   7/28/93 Mahieddine Ladjadj
**  Put itxreg & iytreg back in             Oct 99  ArDean Leith
**  Altered defaults for testing            Nov 07  ArDean Leith
**
************************************************************************
**    AUTHOR:  Mahieddine Ladjadj                                      *
 C=* FROM: WEB - VISUALIZER FOR SPIDER MODULAR IMAGE PROCESSING SYSTEM *
 C=* Copyright (C) 1992-2005  Health Research Inc.                     *
 C=*                                                                   *
 C=* HEALTH RESEARCH INCORPORATED (HRI),                               *   
 C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                  *
 C=*                                                                   *
 C=* Email:  spider@@wadsworth.org                                      *
 C=*                                                                   *
 C=* This program is free software; you can redistribute it and/or     *
 C=* modify it under the terms of the GNU General Public License as    *
 C=* published by the Free Software Foundation; either version 2 of    *
 C=* the License, or (at your option) any later version.               *
 C=*                                                                   *
 C=* This program is distributed in the hope that it will be useful,   *
 C=* but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 C=* General Public License for more details.                          *
 C=*                                                                   *
 C=* You should have received a copy of the GNU General Public License *
 C=* along with this program; if not, write to the                     *
 C=* Free Software Foundation, Inc.,                                   *
 C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.     *
 C=*                                                                   *
************************************************************************
**
**    PURPOSE:      PUTS UP MENU FOR COMAP PARAMETERS
**
************************************************************************
*
*                  comapmen
*                      |
*                     \|/
*                      |
*                    comap
*                      |
*                     \|/
*                      |
*                  corr_mask
*                      |
*                     \|/
*                      |
*   |------->>---- comapmen2
*   |                   |
*   |                  \|/
*   |                   |
*   |     -----<<---------------------->>------------------->>---------
*   |     |                   |                   |                   |
*   |    \|/                 \|/                 \|/                 \|/
*   |     |                   |                   |                   |
*   | comapmen2_buta    comapmen2_buts        comapmen5           comapmen3
*   |     |                                       |                   |
*   |    \|/                                     \|/                 \|/
*   |     |                                       |                   |
*   |     |                                  comapmen5_buta     comapmen3_buta
*   |     |                                       |                   |
*   |    \|/                                     \|/                 \|/
*   |     |                                       |                   |
*   |     |                                       |                   |
*   -- comapsav  ----------------<<-------------------------<<---------                      
*
*
*/

#include <Xm/Text.h>
#include <Xm/ToggleBG.h>
#include "common.h"
#include "routines.h"
#include "comap.h"

  /* function prototypes */
  static void  comapmen_buta (Widget, void *, void *);

  /* externally used variables */
  int    itxreg, ityreg, labreg, itrad, sayno, key1, key2;
  float  stndrt, rangel, rangeu;
  char   filnamm[81],docxnam[81];

  /* internal variables */
  static Widget iw_comapmen= (Widget) 0, iw_doc, iw_xreg, iw_yreg,
         iw_stndrt, iw_rangel, iw_rangeu, iw_key1, iw_key2, iw_imn,
         iw_rad, iw_sayno, iw_itxreg, iw_ityreg;

/**************************  comapmen  *********************************/

void comapmen(Widget w, XtPointer c, XtPointer u)
  {
  Widget iw_buta, iw_butc, iw_buts, iw_rowcol;
  char   filnamm[] = "sma***", docxnam[]  = "doc_sdc";
  char   cval[15];
 
  /* comap menu Widget does not exist, create it */
  if (iw_comapmen == (Widget) 0)
      {
      /* create a dialog box */
      iw_comapmen = wid_dialog(iw_win,(Widget) 0,"comap options",-1,-1);
      iw_rowcol = wid_rowcol(iw_comapmen,'v',-1,-1);
 
      /* set up the variables in the dialog widget */
      itxreg = 1;
      ityreg = 2;
      itrad  = 5;
      key1   = 1;
      key2   = 80;
      sayno  = TRUE;
      stndrt = 2.3;
      rangel = rangeu = 3.0;

      /* create a text box for doc file name input */
      iw_doc = wid_textboxb(iw_rowcol,(Widget) 0,
                            "          Doc. File:",docxnam,20);

      /* create a box for filename  input */
      iw_imn =  wid_textboxb(iw_rowcol,(Widget) 0,
                             "         Image File:",filnamm,20);

      /* create a box for first image key  input */
      sprintf(cval,"%12d",key1);
      iw_key1 = wid_textboxb(iw_rowcol,(Widget) 0,"    First Image Key:",cval,12);

      /* create a box for last image key  input */
      sprintf(cval,"%12d",key2);
      iw_key2 = wid_textboxb(iw_rowcol,(Widget) 0,"     Last Image Key:",cval,12);

      /* create a box for itxreg  input */
      sprintf(cval,"%12d",itxreg);
      iw_itxreg = wid_textboxb(iw_rowcol,(Widget) 0,
                       "X axis factor register:",cval,12);

      /* create a box for ityreg  input */
      sprintf(cval,"%12d",ityreg);
      iw_ityreg = wid_textboxb(iw_rowcol,(Widget) 0,
                       "Y axis factor register:",cval,12);

      /* create a box for stndrt */
      sprintf(cval,"%f",stndrt);
      iw_stndrt = wid_textboxb(iw_rowcol,(Widget) 0," Extent (std. dev.):",
                               cval,12);

      /* create a box for rangel input */
      sprintf(cval,"%f",rangel);
      iw_rangel = wid_textboxb(iw_rowcol,(Widget) 0,"Lower Image Thresh.:",
                               cval,12);

      /* create a box for rangeu input */
      sprintf(cval,"%f",rangeu);
      iw_rangeu = wid_textboxb(iw_rowcol,(Widget) 0,"Upper Image Thresh.:",
                               cval,12);

      /* create a box for marker radius input */
      sprintf(cval,"%12d",itrad);
      iw_rad = wid_textboxb(iw_rowcol,(Widget) 0,"      Marker Radius:",cval,12);

      /* create a toggle box for sayno input */
      iw_sayno = wid_toggleg(iw_rowcol,(Widget) 0," Show Image Numbers",
                             sayno,toggle2_cb, &sayno ,-1,-1);
 
      /* create a push button for stop, cancel & apply */
      wid_stdbut(iw_rowcol,iw_comapmen,
                 &iw_buts,&iw_butc,&iw_buta,"SCA",
                 fin_cb,fin_cb,comapmen_buta,NULL);
      }

  XtManageChild(iw_comapmen);
  }

/*******************  comapmen_buta ******************************/

void comapmen_buta(Widget iw_t, void * itag, void * callpar)
  {
  char  outstr[80];
  char *string;

  /* get docxnam from text widget */
  string = XmTextGetString(iw_doc);
  if (strlen(string) == 0)
    {
    XtFree(string);
    spout(" *** ERROR: No doc file name entered ");
    return;
    }
  else
    {
    strcpy(docxnam,string);
    XtFree(string);
    }

  /* get filnamm from text widget */
  string = XmTextGetString(iw_imn);
  if (strlen(string) == 0)
    {
    XtFree(string);
    spout(" *** ERROR: No file name entered");
    return;
    }
  else
    {
    strcpy(filnamm,string);
    XtFree(string);
    }

  /* get standard deviation from text widget */
  string = XmTextGetString(iw_stndrt);
  sscanf(string,"%f",&stndrt);
  XtFree(string);

  /* get first key number */
  string = XmTextGetString(iw_key1);
  sscanf(string,"%d",&key1);        
  XtFree(string);

  /* get last key number */
  string = XmTextGetString(iw_key2);
  sscanf(string,"%d",&key2);
  XtFree(string);

  /* get range low threshold from text widget */
  string = XmTextGetString(iw_rangel);
  sscanf(string,"%f",&rangel);        
  XtFree(string);

  /* get upper threshold from text widget */
  string = XmTextGetString(iw_rangeu);
  sscanf(string,"%f",&rangeu);
  XtFree(string);

  /* get radius */
  string = XmTextGetString(iw_rad);
  sscanf(string,"%d",&itrad);       
  XtFree(string);

  /* get itxreg */
  string = XmTextGetString(iw_itxreg);
  sscanf(string,"%d",&itxreg);       
  XtFree(string);

  /* get ityreg */
  string = XmTextGetString(iw_ityreg);
  sscanf(string,"%d",&ityreg);       
  XtFree(string);

  if (itxreg < 0 || itxreg > 9 || ityreg < 0 || ityreg > 9)
     {
     spout(" *** ERROR: Factor register range is 1...9");
     return;
     }

  /* get sayno toggle image numbers */
  sayno = XmToggleButtonGadgetGetState(iw_sayno);

  if (key1 > key2)
     {
     sprintf(outstr," *** ERROR: key1 %d > key2 %d ", key1,key2);
     spout(outstr);
     return;
     }

  XtUnmanageChild(iw_comapmen);

  /* start comap program */
  comap();
  }
@


1.10
log
@removed: imagego = mapgo
@
text
@a73 2
#include "routines.h"
#include "common.h"
d76 3
d81 1
a81 1
  void  comapmen_buta (Widget, caddr_t, caddr_t);
d95 1
a95 1
void comapmen(void)
d165 1
a165 1
                             sayno,toggle2_cb,(caddr_t) &sayno ,-1,-1);
d178 1
a178 1
void comapmen_buta(Widget iw_t, caddr_t itag, caddr_t callpar)
@


1.9
log
@altered default menu for testing
@
text
@a116 3
      /* set mapping range */
      imagego = mapgo;

@


1.8
log
@GPL
@
text
@d2 1
a2 1
*****************************************************************************
d5 3
a7 1
**  WID_COMAPMEN.FOR (VAX) ported to UNIX   7/28/93
d9 2
a10 4
**  put itxreg & iytreg back in  Oct 99 ArDean Leith
**
*****************************************************************************
**    AUTHOR:  Mahieddine Ladjadj                                           *
d34 1
a34 1
*****************************************************************************
d38 1
a38 1
*****************************************************************************
a71 1
*
d97 1
a97 1
  char   filnamm[] = "bow***", docxnam[]  = "imcdoc007";
d112 1
a112 1
      key2   = 100;
d190 1
a190 1
    spout(" *** ERROR: no doc file name enterec ");
d204 1
a204 1
    spout(" *** ERROR: no file name entered");
d255 1
a255 1
     spout(" *** ERROR: factor register range is 1...9");
@


1.7
log
@icreased valid itxreg & ityreg values
@
text
@d11 23
a33 6
**    COPYRIGHT (C)1993, WADSWORTH CENTER FOR LABORATORIES AND              *
**    RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
**      THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
**      LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
**      USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
**      THE CENTER FOR LABORATORIES AND RESEARCH			    *
@


1.6
log
@added back factor registers
@
text
@d237 1
a237 1
  if (itxreg < 0 || itxreg > 6 || ityreg < 0 || ityreg > 6)
d239 1
a239 1
     spout(" *** ERROR: factor register range is 1...6");
@


1.5
log
@*** empty log message ***
@
text
@d5 1
a5 1
**  WID_COMAPMEN.FOR (VAX) transported to UNIX   7/28/93
d7 2
d10 1
a10 1
**    AUTHOR:  mahieddine Ladjadj                                           *
a18 1
**
a55 1
*
d57 2
a59 1
#include <stdio.h>
a60 1
#include <string.h>
a61 1
#include "routines.h"
d74 1
a74 1
         iw_rad, iw_sayno;
d80 1
a80 1
  Widget iw_dum,iw_buta, iw_butc, iw_buts, iw_rowcol;
d120 10
d154 3
a156 3
      iw_dum = wid_stdbut(iw_rowcol,iw_comapmen,
                          &iw_buts,&iw_butc,&iw_buta,"SCA",
                          fin_cb,fin_cb,comapmen_buta,NULL);
d173 3
a175 3
      XtFree(string);
      spout(" *** WARNING: no doc file name: docxnam not assigned ");
      return;
d179 2
a180 2
      strcpy(docxnam,string);
      XtFree(string);
d187 3
a189 3
      XtFree(string);
      spout(" *** WARNING: no file name : filnamm not assigned");
      return;
d193 2
a194 2
      strcpy(filnamm,string);
      XtFree(string);
d227 16
d247 5
a251 2
     {sprintf(outstr," WARNING: key1 %d > key2 %d ", key1,key2);
      spout(outstr);}
@


1.4
log
@*** empty log message ***
@
text
@d102 3
@


1.3
log
@static Widget = (Widget)0
@
text
@d64 1
a64 1
  /* external function prototypes */
d67 1
a67 1
  /* external variables */
d95 4
a98 4
      itrad = 5;
      key1 = 1;
      key2 = 100;
      sayno = TRUE;
a117 8
      /* create a box for xreg input */
      sprintf(cval,"%12d",itxreg);
      iw_xreg = wid_textboxb(iw_rowcol,(Widget) 0,"              X reg:",cval,12);

      /* create a box for yreg input */
      sprintf(cval,"%12d",ityreg);
      iw_yreg = wid_textboxb(iw_rowcol,(Widget) 0,"              Y reg:",cval,12);

d138 1
a138 1
      iw_sayno = wid_toggleg(iw_rowcol,(Widget) 0," Show Image Numbers:",
a199 10
  /* get x register */
  string = XmTextGetString(iw_xreg);
  sscanf(string,"%d",&itxreg);
  XtFree(string);

  /* get y register */
  string = XmTextGetString(iw_yreg);
  sscanf(string,"%d",&ityreg);
  XtFree(string);

a217 3
  if (itxreg == ityreg)
     {sprintf(outstr," WARNING: USING SAME X & Y REGISTERS %d %d ", 
              itxreg, ityreg); spout(outstr);}
@


1.2
log
@fixed passing arg to wid_toggleg
@
text
@d73 1
a73 1
  static Widget iw_comapmen, iw_doc, iw_xreg, iw_yreg,
@


1.1
log
@Initial revision
@
text
@d82 1
a83 1
  char   filnamm[] = "bow***", docxnam[]  = "imcdoc007";
d101 1
a101 1
 
a145 1
      sprintf(cval,"%12d",sayno);
d147 1
a147 1
                             sayno,toggle2_cb,cval,-1,-1);
@
