head	1.38;
access;
symbols
	pre-tilt-improve:1.32
	pre_surf_fromtop:1.31
	pre_neednewmap:1.31
	pre_apppluss_remove:1.31
	pre_tiltpair_chng:1.29
	pre_GPL:1.28;
locks;
comment	@ * @;


1.38
date	2018.12.07.17.03.33;	author leith;	state Exp;
branches;
next	1.37;

1.37
date	2015.09.22.16.34.15;	author leith;	state Exp;
branches;
next	1.36;

1.36
date	2015.09.22.14.23.39;	author leith;	state Exp;
branches;
next	1.35;

1.35
date	2015.09.18.16.18.04;	author leith;	state Exp;
branches;
next	1.34;

1.34
date	2015.09.10.13.17.22;	author leith;	state Exp;
branches;
next	1.33;

1.33
date	2015.09.01.17.53.42;	author leith;	state Exp;
branches;
next	1.32;

1.32
date	2015.06.11.13.28.32;	author leith;	state Exp;
branches;
next	1.31;

1.31
date	2011.07.18.18.08.01;	author leith;	state Exp;
branches;
next	1.30;

1.30
date	2011.06.22.19.12.47;	author leith;	state Exp;
branches;
next	1.29;

1.29
date	2005.10.18.16.59.55;	author leith;	state Exp;
branches;
next	1.28;

1.28
date	96.05.06.16.24.05;	author leith;	state Exp;
branches;
next	1.27;

1.27
date	96.04.16.14.26.38;	author leith;	state Exp;
branches;
next	1.26;

1.26
date	96.04.12.16.59.18;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	96.04.05.16.48.44;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	96.03.25.14.43.29;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	96.03.19.14.29.36;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	96.03.18.14.32.17;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	95.09.06.16.25.03;	author mladjadj;	state Exp;
branches;
next	1.20;

1.20
date	95.08.14.16.57.33;	author mladjadj;	state Exp;
branches;
next	1.19;

1.19
date	95.07.20.13.36.30;	author mladjadj;	state Exp;
branches;
next	1.18;

1.18
date	95.02.08.16.38.36;	author liy;	state Exp;
branches;
next	1.17;

1.17
date	95.02.02.16.51.56;	author liy;	state Exp;
branches;
next	1.16;

1.16
date	95.01.26.20.19.48;	author liy;	state Exp;
branches;
next	1.15;

1.15
date	94.12.30.10.17.22;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	94.12.06.11.37.52;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	94.11.16.14.53.30;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	94.05.27.18.49.10;	author odesanya;	state Exp;
branches;
next	1.11;

1.11
date	94.05.19.17.13.30;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	94.04.19.11.52.19;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	94.04.12.15.46.24;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	94.04.12.14.38.12;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	94.04.12.13.50.00;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	94.04.05.16.47.10;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	94.03.28.12.28.40;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	94.03.24.13.40.13;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	93.11.24.15.47.32;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	93.11.23.16.14.04;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	93.11.16.15.30.08;	author leith;	state Exp;
branches;
next	;


desc
@new.
@


1.38
log
@bollingers_email_and_cosmetic
@
text
@
/*$Header: /usr8/web/src/RCS/pickmen.c,v 1.37 2015/09/22 16:34:15 leith Exp $*/

/*
 C++********************************************************************
 C                                                                     *
 C  pickmen.c   New                              May 93   ArDean Leith *
 C              Improved                         Jun 2011 ArDean Leith *
 C              Improved formatting              Jun 2015 ArDean Leith *
 C              shift(TILT), Cosmetic            Jul 2015 ArDean Leith *
 C              Altered particle deletion        Aug 2015 ArDean Leith *
 C              Improved                         Aug 2015 ArDean Leith *
 C              Stop without saving confirm      Sep 2015 ArDean Leith *
 C              Det_tilt return                  Sep 2015 ArDean Leith *
 C                                                                     *
 C *********************************************************************
 C   AUTHOR:  ArDean Leith                                             *
 C=* FROM: WEB - VISUALIZER FOR SPIDER MODULAR IMAGE PROCESSING SYSTEM *
 C=* Copyright (C) 1992-2015  Health Research Inc.                     *
 C=*                                                                   *
 C=* HEALTH RESEARCH INCORPORATED (HRI),                               *   
 C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                  *
 C=*                                                                   *
 C=* Email:  spider@@wadsworth.org                                      *
 C=*                                                                   *
 C=* This program is free software; you can redistribute it and/or     *
 C=* modify it under the terms of the GNU General Public License as    *
 C=* published by the Free Software Foundation; either version 2 of    *
 C=* the License, or (at your option) any later version.               *
 C=*                                                                   *
 C=* This program is distributed in the hope that it will be useful,   *
 C=* but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 C=* General Public License for more details.                          *
 C=*                                                                   *
 C=* You should have received a copy of the GNU General Public License *
 C=* along with this program; if not, write to the                     *
 C=* Free Software Foundation, Inc.,                                   *
 C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.     *
 C=*                                                                   *
 C**********************************************************************
 C
 C  pickmen()
 C
 C  PURPOSE:    Displays particle picking selecting menu
 C
 C  PARAMETERS: None   
 C
 C  CALLED BY:  pickpop 
 C
 C  CALL TREE:
  
 imagemen --> imagemen_cb --> imagemen1 --> showimag --> redvol
                                                            v   
 showimage <-- imagemen1 <-- imagemen_cb <-- imagemen <--  wipic 
    |
  redvol
    |                 | _buta  -->
  wipic               |
    |                 | _butsh --> shift --> pickp
 fitdocmen            |
 fitdocmen_buta       | _butel --> backmen
    |                 |
 pickp                | _butcl --> pickdisp
    |                 |
 fitdoc ->unsdal      | _buter --> backmen
    |
 pickpop -> pickmen --| _butl  --> fitdoc --> unsdal 
                      |              v          
                      |            pickdraw                  
                      |              ^                       pickbackmen 
                      | _butn  --> fitdoc ---> unsdal        rcaver 
                      |                                      |
                      |                                      _pop
                      |                                      |
                      | _butb  --> pickbackmen --> _buts --> pickbacksave
                      |              |
                      |              `-----------> _buta --> pickback
                      |
                      | _butdet   --> fitdoc
                      |               tiltang 
                      |               willsq 
                      |               labelg
                      |               spout
                      |
                      |_fitbutdraw --> fitdoc
                      |                witran
                      |                pickdraw -> fitmen 
                      |
                      |_fitbutsavang --> fitsav
                      |
                      |_fitmenadv -->

 C*********************************************************************
*/

#include <Xm/ToggleBG.h>
#include <Xm/Text.h>

#include "common.h"
#include "routines.h"
#include "pick.h"
#include "fit.h"

 // Internal function prototypes 
 static void    pickmen_buts  (Widget, XtPointer, XtPointer);
 static void    pickmen_butm  (Widget, XtPointer, XtPointer);
 static void    pickmen_butsh (Widget, XtPointer, XtPointer);
 static void    pickmen_butcl (Widget, XtPointer, XtPointer);
 static void    pickmen_butel (Widget, XtPointer, XtPointer);
 static void    pickmen_buter (Widget, XtPointer, XtPointer);
 static void    pickmen_butb  (Widget, XtPointer, XtPointer);
 static void    pickmen_butk  (Widget, XtPointer, XtPointer);
 static void    pickmen_butst (Widget, XtPointer, XtPointer);
 static void    pickmen_butct (Widget, XtPointer, XtPointer);
 static void    pickmen_butat (Widget, XtPointer, XtPointer);
  
 
 // Externally defined global variables 

 // Internally defined global variables 
 float              xu0t, yu0t, xs0t, ys0t;
 int                orgkey       = 1;
 Widget             iw_rowcolh0  = (Widget) 0;
 Widget             iw_parlabel  = (Widget) 0;
 Widget             iw_pickmen   = (Widget) 0;   // Used in: pickp_pop
 
 // Internal file scope variables 
 static Widget      iw_rowcolh;
 static Widget      iw_the, iw_phi, iw_gam;
 static Widget      iw_pickmen_stop = (Widget) 0;  

 /***********************   pickmen   ********************************/

 void pickmen(void)

 {
 Widget  iw_pushs, iw_pushc, iw_pusha; 
 Widget  iw_rowcolv;

 char    cval[10];

 if (iw_pickmen == (Widget) 0)
    {   // Create picking menu 

    iw_pickmen = wid_dialog(iw_win, 0, 
                         "Particle picking menu", -1, -1);

    iw_rowcolv = wid_rowcol(iw_pickmen, 'v', -1, -1);

    // Create label boxes for particle key ------------------- Particle number
    iw_rowcolh0 = wid_rowcol(iw_rowcolv, 'h', -1, -1);
    wid_labelg(iw_rowcolh0,0,"Next particle number:",-1,-1);
    sprintf(cval,"%4d",numm);
    iw_parlabel = wid_labelg(iw_rowcolh0,0,cval,-1,-1);

    // Create label boxes for angles ------------------------- Angles 
    iw_rowcolh = wid_rowcol(iw_rowcolv, 'h', -1, -1);

    wid_labelg(iw_rowcolh,0,"Tilt:",-1,-1);
    sprintf(cval,"%-.2f",thetaf);
    iw_the = wid_labelg(iw_rowcolh,0,cval,-1,-1);

    wid_labelg(iw_rowcolh,0,"Axis ang:",-1,-1);
    sprintf(cval,"%-.2f",phif);
    iw_phi = wid_labelg(iw_rowcolh,0,cval,-1,-1);
    sprintf(cval,"%-.2f",gammaff);
    iw_gam = wid_labelg(iw_rowcolh,0,cval,-1,-1);

   //Create pushbutton for fitting angles -------------------- Redetermine angles
    wid_pushg(iw_rowcolv, 0, "Redetermine tilt & axis angles",
                  pickmen_butdet, NULL, -1,-1);

    // Create push button for saving angles ------------------ Save angles
    wid_pushg(iw_rowcolv, 0, "Save angles in angles file",
                     fit_butsavang, NULL, -1,-1);

    // Create pushbutton for shifting image ------------------ Shift images
    wid_pushg(iw_rowcolv, 0, "Shift images",
                  pickmen_butsh, NULL, -1,-1);

    // Create pushbutton for enhancing left image ------------ Enhance left
    wid_pushg(iw_rowcolv, 0, "Enhance left image",
                  pickmen_butel, NULL, -1,-1);

    // Create pushbutton for enhancing right image ----------- Enhance right
    wid_pushg(iw_rowcolv, 0, "Enhance right image",
                  pickmen_buter, NULL, -1,-1);

    // Create pushbutton for backgrounding images ------------ Background
    wid_pushg(iw_rowcolv, 0, "Pick background windows",
                  pickmen_butb, NULL, -1,-1);

    // Create pushbutton for erasing locations/numbers ------- Erase
    wid_pushg(iw_rowcolv, 0, "Erase all labels",
                  pickmen_butcl, NULL, -1,-1);

    // Create pushbutton for showing locations --------------- Show locations
    wid_pushg(iw_rowcolv, 0, "Show particle locations",
                  pickmen_butl, NULL, -1,-1);

    // Create pushbutton for showing numbers ----------------- Show numbers
    wid_pushg(iw_rowcolv, 0, "Show particle numbers",
                  pickmen_butn, NULL, -1,-1);

    // Create push button for draw points -------------------- Draw fitted
    wid_pushg(iw_rowcolv, 0, "Draw fitted locations",
                     fit_butdraw2, NULL, -1,-1);

    // Create push button for advanced ----------------------- Advanced 
    wid_pushg(iw_rowcolv, 0, "Expert menu",
                     fitmen_adv, NULL, -1,-1);

    // Create box for stop  ---------------------------------- Stop
    wid_stdbut(iw_rowcolv, iw_pickmen, 
               &iw_pushs, &iw_pushc, &iw_pusha, "S",
               pickmen_buts, fin_cb ,fin_cb, NULL);
    }

 else
    {
    // Update label box for particle ------------------------- Particle number
    sprintf(cval,"%4d",numm);
    wid_labelg(iw_rowcolh,iw_parlabel,cval,-1,-1);

    // Update label boxes for angles ------------------------- Angles 
    sprintf(cval,"%-.2f",thetaf);
    wid_labelg(iw_rowcolh,iw_the,cval,-1,-1);

    sprintf(cval,"%-.2f",phif);
    wid_labelg(iw_rowcolh,iw_phi,cval,-1,-1);

    sprintf(cval,"%-.2f",gammaff);
    wid_labelg(iw_rowcolh,iw_gam,cval,-1,-1);
    }

 XtManageChild(iw_pickmen);
 }

 /************ Erase button callback **********************************/

 void pickmen_butcl(Widget iw_temp, XtPointer data, 
                                    XtPointer calldata)
 {
 /* Redisplay images at current shifted location */
 pickdisp(TRUE,TRUE);
 }

 /************ Shift button callback **********************************/

 void pickmen_butsh(Widget iw_temp, XtPointer data, 
                                    XtPointer calldata)
 {
 /*  Remove message */
 XtUnmanageChild(iw_but_lefrit);

 /*  Remove the menu widget */
 XtUnmanageChild(iw_pickmen);

 /*  Cancel buttons */
 XtUninstallTranslations(iw_win);

 /* Shift image using mouse for input */
 shift(TILT);
 }


 /************ Background window picking callback **********************/

 void pickmen_butb(Widget iw_temp, XtPointer data, 
                                   XtPointer calldata)
 {
 // Pick background windows using mouse 
 if ( !fitted)
    {
    spout("*** Need to determine tilt angles first!!");
    XBell(idispl,50); XBell(idispl,50);
    return;
    }

 /*  Remove button assignment messages */
 XtUnmanageChild(iw_but_lefrit);

 /*  Remove the picking menu widget */
 XtUnmanageChild(iw_pickmen);

 /*  Cancel buttons */
 XtUninstallTranslations(iw_win);

 /* Display menu for picking background windows using mouse */
 pickbackmen();
 }

/*************  Draw particle callback *********************************/

 void pickmen_butn(Widget iw_temp, XtPointer data, 
                                  XtPointer calldata)
 {
 /* Draw particle numbers at their location */
 pickdraw(TRUE, TRUE, FALSE, TRUE, FALSE, maxpart);
 }


/***********  Draw locations callback *********************************/

 void pickmen_butl(Widget iw_temp, XtPointer data, 
                                   XtPointer alldata)
 {
 // Draw locations on both sides
 pickdraw(TRUE, TRUE, TRUE, FALSE, FALSE, maxpart);
 }

/*************  Enhance left callback *********************************/

 void pickmen_butel(Widget iw_temp, XtPointer data, 
                                    XtPointer calldata)
 {
 backmen(TRUE);
 }

/*************  Enhance right callback *********************************/

 void pickmen_buter(Widget iw_temp, XtPointer data, 
                                    XtPointer calldata)
 {
 backmen(FALSE);
 }


/****************  Determine angles callback ***********************/

 void pickmen_butdet(Widget iw_temp, XtPointer data, 
                                     XtPointer calldata)
 {
 char   outmes[80];
 char   cval[10];
 int    iflagt, iflagw;
 int    iarea;

 spoutfile(TRUE);

 /* Retrieve tilted and untilted points */
 fitdoc(TRUE,FALSE,FALSE,FALSE);

 /* Determine theta tilt angle */
 iflagt = tiltang(xu0,yu0, xs,ys, maxpart, &thetaf, &iarea, arealim, TRUE);
 if (iflagt > 0)
    {  
    spout("*** Warning, can not calculate tilted angle. Try again");
    XBell(idispl,50); XBell(idispl,50);
    }
 if (iflagt < 0)
    { /* Some bad locations accepted */  XBell(idispl,50); }

 // Get origin location using present orgkey
 xu0t = xu0[orgkey-1];
 yu0t = yu0[orgkey-1];
 xs0t =  xs[orgkey-1];
 ys0t =  ys[orgkey-1];

 // willsq reads:   xu0, yu0, xs, ys, thetaf, & maxpart,  xu0t, yu0t, xs0t, ys0t,  and 
 //        returns: phif, gammaff & error flag 
 iflagw = willsq(xu0, yu0, xs, ys, maxpart, 
                thetaf, &gammaff, &phif);
 if (iflagw == 0)
   {   /* Succeeded, fitting is OK */
   fitted = TRUE;
   sprintf(outmes,"Tilt (theta): %5.2f   Gamma: %5.2f   Phi: %5.2f  Origin: (%7.2f,%7.2f)",
            thetaf,gammaff,phif, xs0t,ys0t);
   spout(outmes);
   }
 else
   { XBell(idispl,50); }

 spoutfile(FALSE);
    
 // Update label box for angles 
 sprintf(cval,"%-.2f",thetaf);
 wid_labelg(NULL,iw_the,cval,0,0);
 sprintf(cval,"%-.2f",phif);
 wid_labelg(NULL,iw_phi,cval,0,0);
 sprintf(cval,"%-.2f",gammaff);
 wid_labelg(NULL,iw_gam,cval,0,0);
 }


 /************* Stop button callback **********************************/

 void pickmen_buts(Widget iw_temp, XtPointer data, 
                                   XtPointer calldata )
 {
 Widget  iw_pushst, iw_pushct, iw_pushat; 
 Widget  iw_rowcolv;
 Widget  iw_label;

 if (iw_pickmen_stop == (Widget) 0)
    {   // Create confirmation menu 

    iw_pickmen_stop = wid_dialog(iw_win, 0, 
                         "End Particle picking", -1, -1);
    iw_rowcolv = wid_rowcol(iw_pickmen_stop, 'v', -1, -1);


    // Create label for box saving fit angles query
    iw_label = wid_labelg(iw_rowcolv, 0, "Save fit angles before stopping?", -1, -1);

    /* Create box for stop & start  */
    wid_stdbut_str(iw_rowcolv, iw_pickmen_stop, 
                   &iw_pushst, &iw_pushct, &iw_pushat, "SCA",
                   "SAVE ANGLES THEN STOP",
                   "CANCEL", 
                   "STOP WITHOUT SAVING ANGLES",
                   pickmen_butat, pickmen_butst, pickmen_butst, NULL);
    }

 XtManageChild(iw_pickmen_stop);
 }

 
 /************* Save angles then stop callback **********************************/

 void pickmen_butat(Widget iw_temp, XtPointer data, 
                                    XtPointer calldata )
 {
 // Save fit angles
 fit_butsavang(NULL,NULL,NULL);

 // Remove menu and clean up using final stop callback
 pickmen_butst(NULL,NULL,NULL);
 }

 /************* Cancel stop callback **********************************/

 void pickmen_butct(Widget iw_temp, XtPointer data, 
                                    XtPointer calldata )
 {
 //  Remove the confirmation widget and continue as before
 XtUnmanageChild(iw_pickmen_stop);
 }

 /************* Final stop button callback **********************************/

 void pickmen_butst(Widget iw_temp, XtPointer data, 
                                    XtPointer calldata )
 {
 //  Remove the confirmation widget
 XtUnmanageChild(iw_pickmen_stop);

/*  Remove picking button message */                                 
 XtUnmanageChild(iw_but_lefrit);                       

 /*  Remove the pickmen menu widget */
 XtUnmanageChild(iw_pickmen); 

 /*  Cancel buttons for this routine */
 XtUninstallTranslations(iw_win);

 /*  Restore default cursor */
 setacursor(0,-1,-1);

 /* Deallocate array storage */ 
 if (xim  != (float *)NULL) {free(xim);  xim = (float *) NULL;}
 if (xu0  != (float *)NULL) {free(xu0);  xu0 = (float *) NULL;}
 if (yu0  != (float *)NULL) {free(yu0);  yu0 = (float *) NULL;}
 if (xs   != (float *)NULL) {free(xs);    xs = (float *) NULL;}
 if (ys   != (float *)NULL) {free(ys);    ys = (float *) NULL;}
 if (xs2  != (float *)NULL) {free(xs2);  xs2 = (float *) NULL;}
 if (ys2  != (float *)NULL) {free(ys2);  ys2 = (float *) NULL;}

 /* Stop recording output in results file */
 spoutfile(FALSE);

 closefile(filedatal); filedatal = NULL;
 closefile(filedatar); filedatar = NULL;
 }


/****************  Find tilt angle ***********************/

 int det_tilt(int wantmsg, int wantlabel)
 {
 char   outmes[80];
 char   cval[10];
 int    iflag;
 int    iarea;

 /* Retrieve current locations & orgkey from doc files */
 fitdoc(TRUE,TRUE,FALSE,FALSE);

 /* Determine theta tilt angle */

 iflag = tiltang(xu0,yu0, xs,ys, maxpart, &thetaf, &iarea, arealim, FALSE);
 if (iflag > 0)
    {  
    spout("*** Warning, can not calculate tilted angle. Try again");
    XBell(idispl,50); XBell(idispl,50);
    }
 if (iflag < 0)
    { /* Some bad locations accepted */  
    XBell(idispl,50); 
    }

 // Get origin location using present orgkey
 xu0t = xu0[orgkey-1];
 yu0t = yu0[orgkey-1];
 xs0t =  xs[orgkey-1];
 ys0t =  ys[orgkey-1];

 /* Determine axis angle */
 // willsq reads:   xu0, yu0, xs, ys, thetaf, & maxpart,  xu0t, yu0t, xs0t, ys0t   
 //        returns: phif, gammaff & error iflag 

 iflag = willsq(xu0, yu0, xs, ys, maxpart, 
                thetaf, &gammaff, &phif);
 if (iflag == 0)
   {   /* Succeeded, fitting is OK */
   fitted = TRUE;

   if (wantmsg)
      {   // Always FALSE currently
      sprintf(outmes,"Tilt (theta): %5.2f   Gamma: %5.2f   Phi: %5.2f",
                     thetaf,gammaff,phif);
      spout(outmes);
      }
   }
 else
   { XBell(idispl,50); }
    
 if (wantlabel && iw_the != NULL)
   {    // Update angles label box 
   sprintf(cval,"%-.2f",thetaf);
   wid_labelg(NULL,iw_the,cval,0,0);
   sprintf(cval,"%-.2f",phif);
   wid_labelg(NULL,iw_phi,cval,0,0);
   sprintf(cval,"%-.2f",gammaff);
   wid_labelg(NULL,iw_gam,cval,0,0);
   }

 return 0;
 }


@


1.37
log
@det_tilt returns info now
@
text
@d2 1
a2 1
/*$Header: /usr8/web/src/RCS/pickmen.c,v 1.36 2015/09/22 14:23:39 leith Exp $*/
d97 3
d102 2
a103 3

#include <Xm/ToggleBG.h>
#include <Xm/Text.h>
d106 11
a116 19
 void    pickmen_buts  (Widget, XtPointer, XtPointer);
 void    pickmen_butm  (Widget, XtPointer, XtPointer);
 void    pickmen_butsh (Widget, XtPointer, XtPointer);
 void    pickmen_butl  (Widget, XtPointer, XtPointer);
 void    pickmen_butn  (Widget, XtPointer, XtPointer);
 void    pickmen_butcl (Widget, XtPointer, XtPointer);
 void    pickmen_butel (Widget, XtPointer, XtPointer);
 void    pickmen_buter (Widget, XtPointer, XtPointer);
 void    pickmen_butb  (Widget, XtPointer, XtPointer);
 void    pickmen_butk  (Widget, XtPointer, XtPointer);
 void    pickmen_butdet(Widget, XtPointer, XtPointer);

 void    fit_butdraw2  (Widget, XtPointer, XtPointer);
 void    fit_butsavang (Widget, XtPointer, XtPointer);

 int     det_tilt      (int wantmsg, int wantlabel);
 void    pickmen_butst (Widget, XtPointer, XtPointer);
 void    pickmen_butct (Widget, XtPointer, XtPointer);
 void    pickmen_butat (Widget, XtPointer, XtPointer);
a119 15
 extern FILEDATA *  filedatal;               // From: imagemen
 extern FILEDATA *  filedatar;               // From: imagemen
 extern int         maxpart;                 // From: fitdoc
 extern int         numm;                    // From: pickp
 extern float *     xim;                     // From: fitdoc
 extern float *     xu0;                     // From: fitdoc
 extern float *     yu0;                     // From: fitdoc
 extern float *     xs;                      // From: fitdoc
 extern float *     ys;                      // From: fitdoc
 extern float *     xs2;                     // From: fitdoc
 extern float *     ys2;                     // From: fitdoc
 extern float       phif, thetaf, gammaff;   // From: fitmen
 extern float       arealim;                 // From: fitmen
 extern int         fitted;                  // From: pickp
 extern Widget      iw_but_lefrit;           // From: pickp
d538 2
@


1.36
log
@fitdoc parameters changed,trap for unfitted
@
text
@d2 1
a2 1
/*$Header: /usr8/web/src/RCS/pickmen.c,v 1.35 2015/09/18 16:18:04 leith Exp $*/
d14 1
d119 1
a119 1
 void    det_tilt      (int wantmsg, int wantlabel);
d358 1
a358 1
 int    iflag;
d367 2
a368 2
 iflag = tiltang(xu0,yu0, xs,ys, maxpart, &thetaf, &iarea, arealim, TRUE);
 if (iflag > 0)
d373 1
a373 1
 if (iflag < 0)
d384 1
a384 1
 iflag = willsq(xu0, yu0, xs, ys, maxpart, 
d386 1
a386 1
 if (iflag == 0)
d501 1
a501 1
 void det_tilt(int wantmsg, int wantlabel)
@


1.35
log
@Stop without saving confirm
@
text
@d2 1
a2 1
/*$Header: /usr8/web/src/RCS/pickmen.c,v 1.34 2015/09/10 13:17:22 leith Exp $*/
d293 8
d362 2
a363 2
 /* Retrieve tilted and untilted points, & fit angles */
 fitdoc(FALSE,FALSE,FALSE);
d507 2
a508 2
 /* Retrieve current tilted and untilted points from doc file */
 fitdoc(TRUE,FALSE,FALSE);
d545 1
a545 1
    }
@


1.34
log
@Reposition button menu
@
text
@d2 1
a2 1
/*$Header: /usr8/web/src/RCS/pickmen.c,v 1.33 2015/09/01 17:53:42 leith Exp $*/
d13 1
d119 4
a122 1
 
d143 4
a146 4
 int                orgkey      = 1;
 Widget             iw_rowcolh0 = (Widget) 0;
 Widget             iw_parlabel = (Widget) 0;
 Widget             iw_pickmen  = (Widget) 0;   // Used in: pickp_pop
d151 1
d355 1
a355 1
 fitdoc(FALSE);
d404 59
a462 2
 /*  Remove message */
 XtUnmanageChild(iw_but_lefrit);
d464 2
a465 2
 /*  Remove the menu widget */
 XtUnmanageChild(iw_pickmen);
d467 1
a467 1
 /*  Cancel buttons,  Stop this routine */
d489 1
d499 2
a500 2
 /* Retrieve current tilted and untilted points, & fit angles */
 fitdoc(TRUE);
d532 1
a532 1
      {   /* Succeeded, fitting is OK */
@


1.33
log
@$2
@
text
@d2 1
a2 1
/*$Header: /usr8/web/src/RCS/pickmen.c,v 1.32 2015/06/11 13:28:32 leith Exp $*/
a134 2
 extern Widget      iw_but_lef;              // From: pickp
 extern Widget      iw_but_rit;              // From: pickp
a269 2
 XtUnmanageChild(iw_but_lef);
 XtUnmanageChild(iw_but_rit);
a288 2
 XtUnmanageChild(iw_but_lef);
 XtUnmanageChild(iw_but_rit);
a399 2
 XtUnmanageChild(iw_but_lef);
 XtUnmanageChild(iw_but_rit);
@


1.32
log
@show_tilt added
@
text
@d2 2
a3 1
/*$Header: /usr8/web/src/RCS/pickmen.c,v 1.31 2011/07/18 18:08:01 leith Exp $*/
d5 11
a15 8
C++*********************************************************************
C                                                                      *
C  pickmen.c   New                               May 93   ArDean Leith *
C              Improved                          Jun 2011 ArDean Leith *
C              Improved formatting               Jun 2015 ArDean Leith *
C                                                                      *
C **********************************************************************
C    AUTHOR:  ArDean Leith                                             *
d39 11
a49 11
C **********************************************************************
C
C    pickmen()
C
C    PURPOSE:    Displays particle picking selecting menu
C
C    PARAMETERS: None   
C
C    CALLED BY:  pickpop 
C
C    CALL TREE:
a61 2
 fitdoc ->unsdal      | _buter --> backmen
    |                 |
d64 2
d92 1
a92 1
C--*********************************************************************
d117 1
a117 1
 void    show_tilt(int wantmsg, int wantlabel);
d121 2
d125 7
a131 4
 extern float     * xim, * xu0, * yu0;       // From: fitdoc
 extern float     * xs, * ys, * xs2, * ys2;  // From: fitdoc
 extern FILEDATA  * filedatal;               // From: imagemen
 extern FILEDATA  * filedatar;               // From: imagemen
d135 2
a136 4
 extern Widget      iw_but_lef0;             // From: pickp
 extern Widget      iw_but_lef1;             // From: pickp
 extern Widget      iw_but_rit0;             // From: pickp
 extern Widget      iw_but_rit1;             // From: pickp
d140 5
a144 3
 Widget  iw_pickmen = (Widget)0;             // Used in: pickp_pop
 int     orgkey     = 1;
 float   xu0t, yu0t, xs0t, ys0t;
d147 2
a148 3
 static Widget iw_parkey;
 static Widget iw_rowcolh;
 static Widget iw_the, iw_phi, iw_gam;
d168 3
a170 1
    // Create text box for particle key  --------------------- Key number
d172 1
a172 4
    iw_parkey   = wid_textboxb(iw_rowcolv,0,
                            "Next key number:",cval,4);
    XtAddCallback(iw_parkey,XmNvalueChangedCallback,
                           (XtCallbackProc) pickmen_butk,"0");
d174 15
a188 2
    //Create pushbutton for fitting angles ------------------- Determine angs
    wid_pushg(iw_rowcolv, 0, "Determine tilt and axes angles",
d191 4
d223 1
a223 1
    // Create push button for draw points -------------------- Draw 
a226 15
    // Create label boxes for angles ------------------------- Angles 
    iw_rowcolh = wid_rowcol(iw_rowcolv, 'h', -1, -1);
    wid_labelg(iw_rowcolh,0,"Tilt:",-1,-1);
    sprintf(cval,"%-.2f",thetaf);
    iw_the = wid_labelg(iw_rowcolh,0,cval,-1,-1);
    wid_labelg(iw_rowcolh,0,"Angs:",-1,-1);
    sprintf(cval,"%-.2f",phif);
    iw_phi = wid_labelg(iw_rowcolh,0,cval,-1,-1);
    sprintf(cval,"%-.2f",gammaff);
    iw_gam = wid_labelg(iw_rowcolh,0,cval,-1,-1);

    // Create push button for saving angles ------------------ Save ang.
    wid_pushg(iw_rowcolv, 0, "Save angles in doc file",
                     fit_butsavang, NULL, -1,-1);

d239 1
a239 1
    // Update text box for particle key  --------------------- Key number
d241 2
a242 2
    iw_parkey = wid_textboxb(iw_rowcolv,iw_parkey,
                            "Key number:",cval,4);
d246 1
d249 1
d257 1
a257 22


/*********** Key number callback ************************/

 void pickmen_butk(Widget iw_temp, XtPointer data, 
                                   XtPointer calldata)
 {

 char * string = NULL;

 /* Find particle key */
 string = XmTextGetString(iw_parkey);
 sscanf(string,"%d",&numm);
 if (string) free(string);

 if (numm < 1) 
    { spout("*** Key number must be > 0"); return; }

 }


/************ Erase button callback **********************************/
d266 1
a266 1
/************ Shift button callback **********************************/
d272 2
a273 4
 XtUnmanageChild(iw_but_lef0);
 XtUnmanageChild(iw_but_lef1);
 XtUnmanageChild(iw_but_rit0);
 XtUnmanageChild(iw_but_rit1);
d282 2
a283 2
 /* Shift the image using mouse for input */
 shift(TRUE);
d286 2
a287 1
/************ Background picking callback ****************************/
d293 2
a294 4
 XtUnmanageChild(iw_but_lef0);
 XtUnmanageChild(iw_but_lef1);
 XtUnmanageChild(iw_but_rit0);
 XtUnmanageChild(iw_but_rit1);
d312 1
a312 4
 /* Retrieve tilted and untilted points, & fit angles */
 fitdoc(FALSE);

 /* Draw */
d322 1
a322 4
 /* Retrieve tilted and untilted points, & fit angles */
 fitdoc(FALSE);

 // Draw 
a347 1
 char * string;
a355 1

d368 1
a368 1
 // Get origin location for present orgkey
d374 2
a375 1
 // willsq reads xu0,yu0,xs,ys,thetaf,& maxpart  and returns phif,gammaff,& error flag 
d400 1
a400 1
/************* Stop button callback **********************************/
d406 2
a407 4
 XtUnmanageChild(iw_but_lef0);
 XtUnmanageChild(iw_but_lef1);
 XtUnmanageChild(iw_but_rit0);
 XtUnmanageChild(iw_but_rit1);
d437 1
a437 1
 void show_tilt(int wantmsg, int wantlabel)
a438 1
 char * string;
a443 2
 spoutfile(TRUE);

d448 1
d456 13
a468 1
    { /* Some bad locations accepted */  XBell(idispl,50); }
d470 3
a472 1
 if (iflag == 0 && wantmsg)
d474 1
a474 3
   sprintf(outmes,"Thetabad: %5.2f   ", thetaf);
   spout(outmes);
   }
d476 9
a484 1
 spoutfile(FALSE);
d487 1
a487 2
   {   
   // Update label box for angles 
@


1.31
log
@gammaff typo
@
text
@d2 1
a2 1
/*$Header: /usr8/web/src/RCS/pickmen.c,v 1.30 2011/06/22 19:12:47 leith Exp leith $*/
d8 1
d13 1
a13 1
 C=* Copyright (C) 1992-2005  Health Research Inc.                     *
d74 2
a75 1
                      | _butdet   --> tiltang 
d77 2
d81 2
a82 2
                      |                | witran
                      |                | pickdraw -> fitmen 
d112 4
a115 1
  
d130 1
a141 1

d286 1
d308 1
d376 1
d380 1
a380 1
 iflag = tiltang(xu0,yu0, xs,ys, maxpart, &thetaf, &iarea, arealim);
d395 1
a395 1
 /* Routine: willsq returns phif, gammaff, & error flag */
d401 1
a401 2
   sprintf(outmes,
   "Fitted Theta: %5.2f   Gamma:%5.2f Phi:%5.2f  Origin: (%7.2f,%7.2f)",
d430 1
d457 44
@


1.30
log
@rewrite
@
text
@d2 1
a2 1
/*$Header:  Exp $*/
d204 1
a204 1
    sprintf(cval,"%-.2f",gammaf);
d232 1
a232 1
    sprintf(cval,"%-.2f",gammaf);
d406 1
a406 1
 sprintf(cval,"%-.2f",gammaf);
@


1.29
log
@GPL
@
text
@d2 1
a2 2
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.28 1996/05/06 16:24:05 leith Exp $*/

d4 7
a10 6
C++********************************************************************
C
C  pickmen.c          May 93 al
C
C *********************************************************************
C    AUTHOR:  ArDean Leith                                            *
d34 1
a34 1
C *********************************************************************
d36 1
a36 1
C    PICKMEN()
d38 1
a38 1
C    PURPOSE:    displays particle picking selecting menu
d40 1
a40 1
C    PARAMETERS: none   
d42 1
a42 1
C    CALLed BY:  pickpop 
d73 2
d76 7
a82 16
                      | fitorigin
                           |
                        fitorigin_buta
                           |
                        fitdoc     |_butfit   --> willsq -> fitmen
                           |       |
                           |       |_buttilt  --> tiltang -> fitmen
                        fitmen --->|
                                   |_butdraw2 --> fitdoc
                                   |              witran
                                   |              pickdraw -> fitmen 
                                   |
                                   |_fitbutsavang --> fitsav
                                                      
                                   

d93 15
a107 11
 /* internal function prototypes */
 void          pickmen_buts (Widget, XtPointer, XtPointer);
 void          pickmen_buta (Widget, XtPointer, XtPointer);
 void          pickmen_butm (Widget, XtPointer, XtPointer);
 void          pickmen_butsh(Widget, XtPointer, XtPointer);
 void          pickmen_butl (Widget, XtPointer, XtPointer);
 void          pickmen_butn (Widget, XtPointer, XtPointer);
 void          pickmen_butcl(Widget, XtPointer, XtPointer);
 void          pickmen_butel(Widget, XtPointer, XtPointer);
 void          pickmen_buter(Widget, XtPointer, XtPointer);
 void          pickmen_butb (Widget, XtPointer, XtPointer);
d109 24
a132 5
 /* externally defined global variables */
 extern int       irad, numm, maxpart;
 extern float     * xim, * xu0, * yu0, * xs,  * ys, * xs2, * ys2;
 extern FILEDATA  * filedatal;
 extern FILEDATA  * filedatar;
a133 6
 /* internally defined global variables */
 Widget iw_pickmen = (Widget)0;       /* used in pickp_pop */
 
 /* internal file scope variables */
 static Widget iw_parkey, iw_ximoff;
 int           ximoff = 0;
a139 1
 static  Widget  iw_rowcolh;
d145 2
d148 2
a149 2
 if (iw_pickmen == (Widget)0)
    {   /* create  picking menu first */
a150 1
    iw_pickmen = wid_dialog(iw_win, 0, "Particle picking menu", -1, -1);
d153 1
a153 4
    iw_rowcolh = wid_rowcol(iw_rowcolv, 'h', -1, -1);

    /* create text box for particle key  */
    if ( numm == 0 ) numm = 1;  /* initialize to 1  */
d155 8
a162 1
    iw_parkey   = wid_textboxb(iw_rowcolh,0,"Key number:",cval,4);
d164 2
a165 10
    /* create text box for ximoff  */
    sprintf(cval,"%4d",ximoff);
    iw_ximoff   = wid_textboxb(iw_rowcolh,0,"Offset:",cval,4);

    /* create pushbutton for fitting angles */
    wid_pushg(iw_rowcolv, 0, "Fit angles",
                  fitorigin, NULL, -1,-1);

    /* create pushbutton for shifting image */
    wid_pushg(iw_rowcolv, 0, "Shift image",
d168 2
a169 2
    /* create pushbutton for enhancing left image */
    wid_pushg(iw_rowcolv, 0, "Enhance left",
d172 2
a173 2
    /* create pushbutton for enhancing right image */
    wid_pushg(iw_rowcolv, 0, "Enhance right",
d176 2
a177 2
    /* create pushbutton for backgrounding images */
                  wid_pushg(iw_rowcolv, 0, "Backgrounding",
d180 2
a181 2
    /* create pushbutton for erasing locations and numbers */
    wid_pushg(iw_rowcolv, 0, "Erase notations",
d184 2
a185 1
     wid_pushg(iw_rowcolv, 0, "Show particle locations",
d188 2
a189 1
     wid_pushg(iw_rowcolv, 0, "Show particle numbers",
d192 24
a215 1
    /* create box for apply  */
d217 2
a218 3
               &iw_pushs, &iw_pushc, &iw_pusha, "SCA",
               pickmen_buts, fin_cb ,pickmen_buta, NULL);
 
d223 1
a223 1
    /* create text box for particle key  */
d225 9
a233 1
    iw_parkey = wid_textboxb(iw_rowcolh,iw_parkey,"Key number:",cval,4);
d241 1
a241 1
/*********** accept button callback **********************************/
d243 2
a244 1
 void pickmen_buta(Widget iw_temp, XtPointer data, XtPointer calldata)
d249 1
a249 1
 /* find particle key */
d252 1
a252 6
 if(string) free(string);

 /* find ximoff  */
 string = XmTextGetString(iw_ximoff);
 sscanf(string,"%d",&ximoff);
 if(string) free(string);
d257 1
a257 3
 if (ximoff < 0) 
    { spout("*** Offset must be >= 0"); return; }

a258 3
 /*  remove  pickmen menu */
 XtUnmanageChild(iw_pickmen);
}
d260 1
a260 1
/************ erase button callback **********************************/
d262 2
a263 1
 void pickmen_butcl(Widget iw_temp, XtPointer data, XtPointer calldata)
d265 1
a265 5

 /*  remove  pickmen menu */
 XtUnmanageChild(iw_pickmen);

 /* redisplay original images at current shifted location */
a266 3

 /*  replace  pickmen menu */
 XtManageChild(iw_pickmen);
d269 1
a269 1
/************ shift button callback **********************************/
d271 2
a272 1
 void pickmen_butsh(Widget iw_temp, XtPointer data, XtPointer calldata)
d274 5
d280 1
a280 4
 /*  remove message */
 showbutx("","","",TRUE);

 /*  remove the menu widget */
d283 1
a283 1
 /*  cancel buttons */
d286 1
a286 1
 /* shift the image using mouse for input */
a287 1

d290 1
a290 1
/************ background picking callback ****************************/
d292 2
a293 1
 void pickmen_butb(Widget iw_temp, XtPointer data, XtPointer calldata)
d295 5
a299 2
 /*  remove message */
 showbutx("","","",TRUE);
d301 1
a301 1
 /*  remove the menu widget */
d304 1
a304 1
 /*  cancel buttons */
d307 1
a307 1
 /* pick background windows using mouse for input, first display menu */
d311 1
a311 1
/*************  draw particle callback *********************************/
d313 2
a314 1
 void pickmen_butn(Widget iw_temp, XtPointer data, XtPointer calldata)
d316 1
a316 1
 /* retrieve tilted and untilted points, & fit angles */
d319 1
a319 1
 /* draw */
d324 1
a324 1
/***********  draw locations callback *********************************/
d326 2
a327 1
 void pickmen_butl(Widget iw_temp, XtPointer data, XtPointer alldata)
d329 1
a329 1
 /* retrieve tilted and untilted points, & fit angles */
d332 1
a332 1
 /* draw */
d336 1
a336 1
/*************  enhance left callback *********************************/
d338 2
a339 1
 void pickmen_butel(Widget iw_temp, XtPointer data, XtPointer calldata)
d344 1
a344 1
/*************  enhance right callback *********************************/
d346 2
a347 1
 void pickmen_buter(Widget iw_temp, XtPointer data, XtPointer calldata)
a351 1
/************* stop button callback **********************************/
d353 4
a356 1
 void pickmen_buts(Widget iw_temp, XtPointer data, XtPointer calldata )
d358 20
d379 33
a411 2
 /*  remove message */
 showbutx("","","",TRUE);
d413 10
a422 1
 /*  remove the menu widget */
d425 1
a425 1
 /*  cancel buttons,  stop this routine */
d428 1
a428 1
 /*  restore default cursor */
d431 1
a431 1
 /* deallocate array storage */ 
d440 1
a440 1
 /* stop recording output in results file */
d446 3
@


1.28
log
@removed deallocation of aval,bval,xsfm,ysmf.
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.27 1996/04/16 14:26:38 leith Exp leith $*/
d11 23
a33 5
C *  COPYRIGHT (C)1992,1996  HEALTH RESEARCH INC, EMPIRE STATE PLAZA, *
C *    ALBANY, NY 12201.  THE CONTENTS OF THIS DOCUMENT ARE           *
C *    PROPRIETARY TO HEALTH RESEARCH INC., AND ARE NOT TO BE         *
C *    DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED   *
C *    WITHOUT WRITTEN APPROVAL OF HEALTH RESEARCH INC.               *
@


1.27
log
@menu names changed,filedata's nulled
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.26 1996/04/12 16:59:18 leith Exp leith $*/
d95 4
a98 6
 extern int         irad, numm, maxpart;
 extern float     * xim, * xu0, * yu0, * xs,  * ys, * xs2, * ys2, 
                  * xsmf, * ysmf;
 extern float     * aval, * bval;
 extern FILEDATA*  filedatal;
 extern FILEDATA*  filedatar;
a321 2
 if (aval != (float *)NULL) {free(aval);aval = (float *) NULL;}
 if (bval != (float *)NULL) {free(bval);bval = (float *) NULL;}
a325 2
 if (xsmf != (float *)NULL) {free(xsmf);xsmf = (float *) NULL;}
 if (ysmf != (float *)NULL) {free(ysmf);ysmf = (float *) NULL;}
@


1.26
log
@changed aval
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.25 1996/04/05 16:48:44 leith Exp leith $*/
d28 3
a30 1
 imagemen
d32 1
a32 16
 imagemen_cb
    |
 imagemen1
    |
 showimage
    |
 redvol   
 wipic
    |
 imagemen
    |
 imagemen_cb
    |
 imagemen1
    |
 showimage
d34 4
a37 4
 redvol               |
 wipic                | _butsh --> shift --> pickp
    |                 |
 fitdocmen            | _butel --> backmen
d39 1
a39 1
 fitdoc               | _buter --> backmen
d45 2
a46 2
                      |            pickdraw                  pickbackmen
                      |              ^                       fitsav 
d57 4
a60 3
                           |       |_butfit   --> willsq
                           v       |              fitsav
                        fitdoc     |              fitmen
d62 1
a62 2
                           |       |_buttilt  --> tiltang
                           v       |              fitmen
a63 4
                                   |_butdraw1 --> fitdoc
                                   |              witran
                                   |              pickdraw  
                                   |
d66 1
a66 1
                                   |              pickdraw  
d138 2
a139 2
    /* create pushbutton for fitting markers */
    wid_pushg(iw_rowcolv, 0, "Fit markers",
d159 1
a159 1
    wid_pushg(iw_rowcolv, 0, "Erase markers",
d162 1
a162 1
     wid_pushg(iw_rowcolv, 0, "Show marker locations",
d165 1
a165 1
     wid_pushg(iw_rowcolv, 0, "Show marker numbers",
d204 2
a205 2
 if (numm < 0) 
    { spout("*** Key number must be >= 0"); return; }
d266 1
a266 1
/*************  draw markers callback *********************************/
d270 4
a273 1
 fitdoc(FALSE,FALSE);
d282 4
a285 1
 fitdoc(FALSE,FALSE);
d336 2
a337 2
 closefile(filedatal);
 closefile(filedatar);
@


1.25
log
@*** empty log message ***
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.24 1996/03/25 14:43:29 leith Exp leith $*/
d114 2
a115 1
                  * aval, * bval, * xsmf, * ysmf;
@


1.24
log
@minor
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.23 1996/03/19 14:29:36 leith Exp leith $*/
d48 1
a48 1
 wipic                | _butsh --> shift
d54 1
a54 1
 pickp                | _butel --> pickdisp
d56 5
a60 5
 pickpop -> pickmen --| _butl  --> fitdoc --> unsdal --> pickp
                      |              |          ^
                      |            pickdraw     |            pickbackmen
                      |              |          |            fitsav 
                      | _butn  --> fitdoc ------'            rcaver 
d70 10
a79 6
                           |       |_fitbutsavang --> fitsav
                           |       |                  spoutfile
                        fitdoc     |
                           |       |_butfit --> willsq
                           |       |            fitsav
                        fitmen --->|            fitmen
d81 3
a83 2
                                   |_buttilt --> tiltang
                                   |             fitmen
d85 3
a87 3
                                   |_butdraw2 --> fitdoc
                                                  witran
                                                  pickdraw  
d118 3
d122 1
a122 1
 static Widget iw_pickmen=(Widget)0, iw_parkey, iw_ximoff;
d130 3
a132 4
 static Widget  iw_rowcolh;
 Widget  iw_pushs, iw_pushc, iw_pusha, iw_dums; 
 Widget  iw_unmarkit, iw_fit, iw_shift, iw_butel, iw_buter;
 Widget  iw_markitn, iw_markitl, iw_rowcolv;
d155 1
a155 1
    iw_fit      = wid_pushg(iw_rowcolv, 0, "Fit markers",
d159 1
a159 1
    iw_shift      = wid_pushg(iw_rowcolv, 0, "Shift image",
d163 1
a163 1
    iw_butel      = wid_pushg(iw_rowcolv, 0, "Enhance left",
d167 1
a167 1
    iw_buter      = wid_pushg(iw_rowcolv, 0, "Enhance right",
d171 1
a171 1
    iw_buter      = wid_pushg(iw_rowcolv, 0, "Backgrounding",
d175 1
a175 1
    iw_unmarkit = wid_pushg(iw_rowcolv, 0, "Erase markers",
d178 1
a178 1
    iw_markitl  = wid_pushg(iw_rowcolv, 0, "Show marker locations",
d181 1
a181 1
    iw_markitn  = wid_pushg(iw_rowcolv, 0, "Show marker numbers",
d185 3
a187 3
    iw_dums = wid_stdbut(iw_rowcolv, iw_pickmen, 
                         &iw_pushs, &iw_pushc, &iw_pusha, "SCA",
                        pickmen_buts, fin_cb ,pickmen_buta, NULL);
@


1.23
log
@removed unused variables, added comments
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.22 1996/03/18 14:32:17 leith Exp leith $*/
d95 10
a104 10
 void          pickmen_buts (Widget, caddr_t, caddr_t);
 void          pickmen_buta (Widget, caddr_t, caddr_t);
 void          pickmen_butm (Widget, caddr_t, caddr_t);
 void          pickmen_butsh(Widget, caddr_t, caddr_t);
 void          pickmen_butl (Widget, caddr_t, caddr_t);
 void          pickmen_butn (Widget, caddr_t, caddr_t);
 void          pickmen_butcl(Widget, caddr_t, caddr_t);
 void          pickmen_butel(Widget, caddr_t, caddr_t);
 void          pickmen_buter(Widget, caddr_t, caddr_t);
 void          pickmen_butb (Widget, caddr_t, caddr_t);
d198 1
a198 1
 void pickmen_buta(Widget iw_temp, caddr_t data, caddr_t call_data)
d201 1
a201 1
 char * string;
d226 1
a226 1
 void pickmen_butcl(Widget iw_temp, caddr_t data, caddr_t call_data)
d241 1
a241 1
 void pickmen_butsh(Widget iw_temp, caddr_t data, caddr_t call_data)
d260 1
a260 1
 void pickmen_butb(Widget iw_temp, caddr_t data, caddr_t call_data)
d277 1
a277 1
 void pickmen_butn(Widget iw_temp, caddr_t data, caddr_t call_data)
d286 1
a286 1
 void pickmen_butl(Widget iw_temp, caddr_t data, caddr_t call_data)
d294 1
a294 1
 void pickmen_butel(Widget iw_temp, caddr_t data, caddr_t call_data)
d301 1
a301 1
 void pickmen_buter(Widget iw_temp, caddr_t data, caddr_t call_data)
d308 1
a308 1
 void pickmen_buts(Widget iw_temp, caddr_t data, caddr_t call_data)
@


1.22
log
@comments added, test for iw_pickmen set to == 0 instead of <= 0 for first time
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.21 1995/09/06 16:25:03 mladjadj Exp leith $*/
d5 1
a5 1
C++*********************************************************************
d9 8
a16 9
C **********************************************************************
C    AUTHOR:  ArDean Leith
C *  COPYRIGHT (C)1993, WADSWORTH CENTER FOR LABORATORIES AND              *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
C **********************************************************************
d38 8
d47 2
a49 2
 imagemen             | _butsh --> shift
    |                 |
a93 2
#define NMARK 200

d139 1
a139 1
    if( numm == 0 ) numm = 1;  /* initialize to 1  */
@


1.21
log
@remove XtUninstallTranslations
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.18 1995/02/08 16:38:36 liy Exp $*/
d28 13
a40 4
     

                      | _buta  -->
                      |
d125 1
a125 1
 if (iw_pickmen <= (Widget)0)
@


1.20
log
@delete array memory used
@
text
@d108 1
a108 1
 static Widget  iw_rowcolv;
d111 1
a111 1
 Widget  iw_markitn, iw_markitl, iw_rowcolh;
d197 1
a197 1
 free(string);
@


1.19
log
@static Widget = (Widget)0
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.18 1995/02/08 16:38:36 liy Exp mladjadj $*/
d11 1
a11 1
C *  COPYRIGHT (C)1993, WADSWORTH CENTER FOR LABORATORIES AND             *
d95 1
a95 1
                  * aval, * bval;
d100 1
a100 1
 Widget        iw_pickmen= (Widget)0, iw_parkey, iw_ximoff;
d108 2
a109 1
 Widget  iw_rowcolv, iw_pushs, iw_pushc, iw_pusha, iw_dums; 
d192 1
a192 1
 free(string);
d266 1
a266 1
 pickdraw(TRUE,TRUE,  FALSE,TRUE,  FALSE, maxpart);
d275 1
a275 1
 pickdraw(TRUE,TRUE,  TRUE,FALSE,  FALSE, maxpart);
d310 11
a320 9
 if (xim  != NULL) free(xim);
 if (xu0  != NULL) free(xu0);
 if (yu0  != NULL) free(yu0);
 if (aval != NULL) free(aval);
 if (bval != NULL) free(bval);
 if (xs   != NULL) free(xs);
 if (ys   != NULL) free(ys);
 if (xs2  != NULL) free(xs2);
 if (ys2  != NULL) free(ys2);
@


1.18
log
@modified (int)structure for Onyx
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.17 1995/02/02 16:51:56 liy Exp liy $*/
d100 1
a100 1
 Widget        iw_pickmen, iw_parkey, iw_ximoff;
@


1.17
log
@modified (int)Widget again to keep web run on all machines
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/pickmen.c,v 1.16 1995/01/26 20:19:48 liy Exp liy $*/
d309 9
a317 9
 if ((int)xim  != 0) free(xim);
 if ((int)xu0  != 0) free(xu0);
 if ((int)yu0  != 0) free(yu0);
 if ((int)aval != 0) free(aval);
 if ((int)bval != 0) free(bval);
 if ((int)xs   != 0) free(xs);
 if ((int)ys   != 0) free(ys);
 if ((int)xs2  != 0) free(xs2);
 if ((int)ys2  != 0) free(ys2);
@


1.16
log
@modified (int)widget for Onyx
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/pickmen.c,v 1.15 1994/12/30 10:17:22 leith Exp liy $*/
d115 1
a115 1
 if (iw_pickmen <= (void *)0)
@


1.15
log
@ removed excess output
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/pickmen.c,v 1.14 94/12/06 11:37:52 leith Exp Locker: leith $*/
d115 1
a115 1
 if ((int)iw_pickmen <= 0)
@


1.14
log
@only change particle number not ximoff now
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/pickmen.c,v 1.13 94/11/16 14:53:30 leith Exp Locker: leith $*/
d264 1
a264 1
 fitdoc(TRUE,FALSE);
d273 1
a273 1
 fitdoc(TRUE,FALSE);
@


1.13
log
@added call tree
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/pickmen.c,v 1.12 94/05/27 18:49:10 odesanya Exp Locker: leith $*/
d168 1
d173 2
a174 2
    iw_parkey   = wid_textboxb(iw_rowcolh,iw_parkey,
                                "Key number:",cval,4);
a175 5
    /* create text box for ximoff  */
    sprintf(cval,"%4d",ximoff);
    iw_ximoff   = wid_textboxb(iw_rowcolh,iw_ximoff,
                               "Offset:",cval,4);
    }
@


1.12
log
@modified output to doc files
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/pickmen.c,v 1.11 94/05/19 17:13:30 leith Exp $*/
d5 1
a5 1
C++*************************************************************************
d9 1
a9 1
C **************************************************************************
d17 1
a17 1
C **************************************************************************
d25 1
a25 1
C    CALLed BY:  web_com      
d27 42
a327 1

@


1.11
log
@chnaged labels of particl no. and key offset
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web/src/RCS/pickmen.c,v 1.10 94/04/19 11:52:19 leith Exp $*/
d59 1
a59 1
 int           xoffset = 0, ximoff = 1;
d82 1
d84 1
a84 1
    iw_parkey   = wid_textboxb(iw_rowcolh,0,"Coordinate number:",cval,4);
d88 1
a88 1
    iw_ximoff   = wid_textboxb(iw_rowcolh,0,"Image number:",cval,4);
d131 1
a131 1
                                "Coordinate number:",cval,4);
d136 1
a136 1
                               "Image number:",cval,4);
d161 1
a161 1
    { spout("*** Coordinate number must be >= 0"); return; }
d164 1
a164 1
    { spout("*** Image number must be >= 0"); return; }
a165 4
 if (ximoff < numm) 
    { spout("*** Image number must be >= Coordinate number"); return; }

  xoffset = ximoff - numm;
@


1.10
log
@ximoff = 1
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web//RCS/pickmen.c,v 1.8 94/04/12 14:38:12 leith Exp Locker: leith $*/
d59 1
a59 1
 int           uximoff = 1, tximoff = 1, ximoff = 1;
d83 1
a83 1
    iw_parkey   = wid_textboxb(iw_rowcolh,0,"Particle number:",cval,4);
d87 1
a87 1
    iw_ximoff   = wid_textboxb(iw_rowcolh,0,"Key offset:",cval,4);
d130 1
a130 1
                                "Particle number:",cval,4);
d135 1
a135 1
                               "Key offset:",cval,4);
d160 1
a160 1
    { spout("*** Particle number must be >= 0"); return; }
d163 1
a163 1
    { spout("*** Key offset must be >= 0"); return; }
d165 4
a168 1
 uximoff = tximoff = ximoff;
@


1.9
log
@*** empty log message ***
@
text
@d59 1
a59 1
 int           uximoff, tximoff, ximoff = 0;
@


1.8
log
@declared ximoff here
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web//RCS/pickmen.c,v 1.7 94/04/12 13:50:00 leith Exp Locker: leith $*/
d218 2
a219 2
 /* pick background windows using mouse for input */
 pickback(TRUE);
@


1.7
log
@added pickback stuff
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web//RCS/pickmen.c,v 1.6 94/04/05 16:47:10 leith Exp Locker: leith $*/
d51 1
a51 1
 extern int         irad, numm, maxpart, ximoff;
d59 1
a59 1
 int           uximoff, tximoff;
@


1.6
log
@improved shifting
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web//RCS/pickmen.c,v 1.5 94/03/28 12:28:40 leith Exp $*/
d48 1
d59 1
d105 4
d165 2
d203 17
@


1.5
log
@overlut removed
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web//RCS/pickmen.c,v 1.4 94/03/24 13:40:13 leith Exp Locker: leith $*/
d50 5
a54 3
 extern int    irad, numm, maxpart, ximoff;
 extern float  * xim, * xu0, * yu0, * xs,  * ys, * xs2, * ys2, 
               * aval, * bval;
d258 3
@


1.4
log
@added enhancemnet
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web//RCS/pickmen.c,v 1.3 93/11/24 15:47:32 leith Exp $*/
d49 1
a49 1
 /* externally defined common variables */
d54 1
a54 1
 /* internally defined  common variables */
d169 2
a170 1
 clearover(NULL,NULL,NULL);
a180 3
 /*  enable all planes for drawing */
 wisetplanes(idispl,icontx,-1);

a230 3
 /*  enable all planes for drawing */
 wisetplanes(idispl,icontx,-1);

a238 3

 /*  restore default lut */
 setamap(map);
@


1.3
log
@*** empty log message ***
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web//RCS/pickmen.c,v 1.2 93/11/23 16:14:04 leith Exp Locker: leith $*/
d31 2
a37 25
 /* external function prototypes */
 extern Widget wid_textboxb (Widget, Widget, char *, char *,  int); 
 extern Widget wid_pushg    (Widget, Widget, char *, void (*) (), 
                             char *,int,int);
 extern Widget wid_rowcol   (Widget, char , int, int);
 extern Widget wid_dialog   (Widget, Widget, char *, int, int);
 extern Widget wid_stdbut   (Widget, Widget, Widget*, Widget*, Widget*, 
                             char *, void (*)(), void (*)(), void (*)(),
                             void (*)());
 extern void   expos_cb     (Widget, caddr_t, caddr_t);
 extern int    wisetplanes  (Display *, GC, int);
 extern void   clearover    (Widget, caddr_t, caddr_t);
 extern void   xorc         (Window, GC, int, int, int, int);
 extern char * itoa         (int);
 extern void   setamap      (Colormap);
 extern void   fin_cb       (Widget, caddr_t, caddr_t);
 extern void   showbutx     (char *, char *, char *, int);
 extern void   shift        (int);
 extern void   fitorigin    (Widget, caddr_t, caddr_t);
 extern void   pickdraw     (int, int, int, int, int, int);
 extern void   fitdoc       (int, int);
 extern void   setacursor   (int,    int, int);
 extern int    spoutfile    (int);
 extern void   spout        (char *);

d46 2
d51 2
a52 2
extern float  * xim, * xu0, * yu0, * xs,  * ys, * xs2, * ys2, 
              * aval, * bval;
d63 1
a63 1
 Widget  iw_unmarkit, iw_fit, iw_shift;
d93 8
d102 1
a102 1
    iw_unmarkit = wid_pushg(iw_rowcolv, 0, "Erase  markers",
d214 13
@


1.2
log
@cursor changed
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web//RCS/pickmen.c,v 1.1 93/11/16 15:30:08 leith Exp Locker: leith $*/
d58 2
d84 1
a84 1
 Widget  iw_markit, iw_unmarkit, iw_fit, iw_shift;
d261 3
@


1.1
log
@Initial revision
@
text
@a0 1
/*$Header$*/
d2 2
d57 1
a58 1

a151 1

d163 1
a163 4
    {
    spout("*** Particle number must be >= 0");
    return;
    }
d166 1
a166 4
    {
    spout("*** Key offset must be >= 0");
    return;
    }
a176 2
 char * string;

d246 3
a258 1

@
