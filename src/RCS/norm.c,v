head	1.9;
access;
symbols
	pre-tilt-improve:1.8
	pre_surf_fromtop:1.8
	pre_neednewmap:1.8
	pre_apppluss_remove:1.8
	pre_tiltpair_chng:1.8
	pre_GPL:1.5;
locks;
comment	@ * @;


1.9
date	2018.12.07.17.03.33;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2007.11.28.16.18.20;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2007.11.01.19.33.45;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.18.17.00.05;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.07.29.15.03.45;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	95.05.08.15.11.57;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.06.15.14.57.32;	author odesanya;	state Exp;
branches;
next	1.2;

1.2
date	94.02.14.12.45.12;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	93.11.10.10.11.03;	author leith;	state Exp;
branches;
next	;


desc
@@


1.9
log
@bollingers_email_and_cosmetic
@
text
@
/*$Header: /usr8/web/src/RCS/norm.c,v 1.8 2007/11/28 16:18:20 leith Exp $*/
/*
 C++*******************************************************************
 C
 C NORM
 C
C **********************************************************************
 C *  SPIDER - MODULAR IMAGE PROCESSING SYSTEM.  AUTHOR: J.FRANK            *
 C=* FROM: WEB - VISUALIZER FOR SPIDER MODULAR IMAGE PROCESSING SYSTEM *
 C=* Copyright (C) 1992-2005  Health Research Inc.                     *
 C=*                                                                   *
 C=* HEALTH RESEARCH INCORPORATED (HRI),                               *   
 C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                  *
 C=*                                                                   *
 C=* Email:  spider@@wadsworth.org                                      *
 C=*                                                                   *
 C=* This program is free software; you can redistribute it and/or     *
 C=* modify it under the terms of the GNU General Public License as    *
 C=* published by the Free Software Foundation; either version 2 of    *
 C=* the License, or (at your option) any later version.               *
 C=*                                                                   *
 C=* This program is distributed in the hope that it will be useful,   *
 C=* but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 C=* General Public License for more details.                          *
 C=*                                                                   *
 C=* You should have received a copy of the GNU General Public License *
 C=* along with this program; if not, write to the                     *
 C=* Free Software Foundation, Inc.,                                   *
 C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.     *
 C=*                                                                   *
C **********************************************************************
 C
 C NORM(FILEPTR)
 C
 C PURPOSE: FINDS MAX, MIN, AV AND STANDARD DEVIATION OF AN IMAGE
 C          PLACES THESE VALUES IN THE HEADER
 C
 C--*******************************************************************
*/

#include <float.h>
#include "files.h"
#include "routines.h"

/********************************************************/

 int norm_new(FILEDATA *fileptr)
 { 

 int       nsam, nrow, nslice, islice, ipix, idum;
 double    fmint, fmaxt, av, av2, sig, b;
 float     pix, fdum;
 char  *   cdum;
 float *   buf;

 nsam   = fileptr -> nsam;
 nrow   = fileptr -> nrow;
 nslice = fileptr -> nslice;

 fmaxt   = FLT_MIN;
 fmint   = FLT_MAX;
 fdum   = 0.0;
 buf    = NULL;

 av     = 0.0;
 av2    = 0.0;

 for (islice = 1; islice <= nslice; islice++)
    {  /* operates slice by slice to conserve memory allocation */

    /* redvol will allocate buf on first call */
    if (!redvol(fileptr, FALSE, &cdum, TRUE, &buf, 1, nsam,
            1, nrow, islice, islice, idum, idum, fdum, fdum,
            &fdum,  &fdum, 1))  return FALSE;

    for (ipix = 0; ipix < nsam * nrow; ipix++)
       {  /* find min, max, etc. */
       b    = *(buf + ipix);
       fmaxt = MYMAX(b,fmaxt);
       fmint = MYMIN(b,fmint);

       av   = av + b;
       av2  = av2 + b * b;
       }

    }

#ifdef NEVER
 pix = nsam * nrow * nslice;

 sig = sqrt (( av2 - ((av * av) / pix)) / (pix - 1.0));
 av  = av / pix;

 fileptr -> fmin_spi = fmint;
 fileptr -> fmax_spi = fmaxt;
 fileptr -> av   = av;
 fileptr -> sig  = sig;
#endif

 printf("*** range: %f ... %f \n",fmint,fmaxt);; 
 free(buf); buf = NULL;

 return (setprm(fileptr,"u"));
} 



/********************************************************/

 int norm(FILEDATA *fileptr)
 { 

 int       nsam, nrow, nslice, irec, isam;
 double    fmint, fmaxt, av, av2, sig, b;
 float     pix, *buf;

 nsam   = fileptr -> nsam;
 nrow   = fileptr -> nrow;
 nslice = fileptr -> nslice;
 buf    = fileptr -> buf;

   
 if (redlin(fileptr,buf,nsam,1) != TRUE)
    return FALSE;

 fmaxt = *buf;
 fmint = fmaxt;

 av  = 0.0;
 av2 = 0.0;

 for (irec = 1; irec <= nslice * nrow; irec++)
    {
    if (redlin(fileptr,buf,nsam,irec) != TRUE)
       return FALSE;

    for (isam = 0; isam < nsam; isam++)
       {
       b    = *(buf + isam);
       fmaxt = MYMAX(b,fmaxt);
       fmint = MYMIN(b,fmint);

       av   = av + b;
       av2  = av2 + b * b;
       }

    }

 pix = nsam * nrow * nslice;

 sig = sqrt (( av2 - ((av * av) / pix)) / (pix - 1.0));
 av  = av / pix;

 fileptr -> fmin_spi = fmint;
 fileptr -> fmax_spi = fmaxt;
 fileptr -> av   = av;
 fileptr -> sig  = sig;


 return (setprm(fileptr,"u"));
} 
@


1.8
log
@fmin
@
text
@d2 1
a2 1
/*$Header: /net/bali/usr1/web/src/RCS/norm.c,v 1.7 2007/11/01 19:33:45 leith Exp $*/
d43 1
a45 3
#include <float.h>

 extern int   setprm(FILEDATA *, char *);
@


1.7
log
@fmin ->fmin_spi..
@
text
@d2 1
a2 1
/*$Header: /net/bali/usr1/web/src/RCS/norm.c,v 1.6 2005/10/18 17:00:05 leith Exp $*/
d55 1
a55 1
 double    fmin_spi, fmax_spi, av, av2, sig, b;
d64 2
a65 2
 fmax_spi   = FLT_MIN;
 fmin_spi   = FLT_MAX;
d83 2
a84 2
       fmax_spi = MYMAX(b,fmax_spi);
       fmin_spi = MYMIN(b,fmin_spi);
d98 2
a99 2
 fileptr -> fmin_spi = fmin_spi;
 fileptr -> fmax_spi = fmax_spi;
d104 1
a104 1
 printf("*** range: %f ... %f \n",fmin_spi,fmax_spi);; 
d118 1
a118 1
 double    fmin_spi, fmax_spi, av, av2, sig, b;
d130 2
a131 2
 fmax_spi = *buf;
 fmin_spi = fmax_spi;
d144 2
a145 2
       fmax_spi = MYMAX(b,fmax_spi);
       fmin_spi = MYMIN(b,fmin_spi);
d158 2
a159 2
 fileptr -> fmin_spi = fmin_spi;
 fileptr -> fmax_spi = fmax_spi;
@


1.6
log
@GPL
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/norm.c,v 1.5 1999/07/29 15:03:45 leith Exp $*/
d55 1
a55 1
 double    fmin, fmax, av, av2, sig, b;
d64 2
a65 2
 fmax   = FLT_MIN;
 fmin   = FLT_MAX;
d83 2
a84 2
       fmax = MYMAX(b,fmax);
       fmin = MYMIN(b,fmin);
d98 2
a99 2
 fileptr -> fmin = fmin;
 fileptr -> fmax = fmax;
d104 1
a104 1
 printf("*** range: %f ... %f \n",fmin,fmax);; 
d118 1
a118 1
 double    fmin, fmax, av, av2, sig, b;
d130 2
a131 2
 fmax = *buf;
 fmin = fmax;
d144 2
a145 2
       fmax = MYMAX(b,fmax);
       fmin = MYMIN(b,fmin);
d158 2
a159 2
 fileptr -> fmin = fmin;
 fileptr -> fmax = fmax;
@


1.5
log
@used redvol to speed up
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/norm.c,v 1.4 1995/05/08 15:11:57 leith Exp $*/
d8 1
a8 1
 C **************************************************************************
d10 24
a33 7
 C *  COPYRIGHT (C)1981,1987, WADSWORTH CENTER FOR LABORATORIES AND         *
 C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
 C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
 C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
 C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
 C *    THE CENTER FOR LABORATORIES AND RESEARCH 			   *
 C **************************************************************************
@


1.4
log
@failed for one line image
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/norm.c,v 1.3 1994/06/15 14:57:32 odesanya Exp leith $*/
d6 1
a6 1
 C NORM
d27 2
a29 1
 extern int   redlin(FILEDATA *, float *, int, int);
d34 63
d133 1
d135 1
d145 1
@


1.3
log
@mahieddiene made changes to the sig definition line
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web//RCS/norm.c,v 1.2 94/02/14 12:45:12 leith Exp $*/
d46 1
a46 1
 if (redlin(fileptr,buf,nsam,nrow/2) != TRUE)
a68 1

@


1.2
log
@replaced MIN,MAX with MYMIN,MYMAX
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web//RCS/norm.c,v 1.1 93/11/10 10:11:03 leith Exp Locker: leith $*/
d73 1
a73 1
 sig = sqrt (( av2 - ((av * av) / pix) / (pix - 1.0)));
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
/*$Header$*/
d63 2
a64 2
       fmax = MAX(b,fmax);
       fmin = MIN(b,fmin);
@
