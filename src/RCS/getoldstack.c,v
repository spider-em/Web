head	1.12;
access;
symbols
	pre-tilt-improve:1.12
	pre_surf_fromtop:1.12
	pre_neednewmap:1.12
	pre_apppluss_remove:1.10
	pre_tiltpair_chng:1.10
	pre_GPL:1.8;
locks;
comment	@ * @;


1.12
date	2011.08.01.16.02.27;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2011.08.01.15.42.49;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2007.11.01.19.33.45;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2005.10.18.17.00.03;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.24.18.53.09;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.13.16.10.58;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.29.15.50.52;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	99.10.15.13.12.02;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	99.10.14.18.43.34;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	99.10.04.14.40.48;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	99.09.30.17.11.40;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.17.32.11;	author leith;	state Exp;
branches;
next	;


desc
@@


1.12
log
@\prints removed
@
text
@
/*$Header: /usr8/web/src/RCS/getoldstack.c,v 1.11 2011/08/01 15:42:49 leith Exp leith $*/

/*
C++********************************************************************
C
C getoldstack.c -- Created Sept 99 Ardean leith
C 
C *********************************************************************
C *  AUTHOR: ARDEAN LEITH                                             *
 C=* FROM: WEB - VISUALIZER FOR SPIDER MODULAR IMAGE PROCESSING SYSTEM *
 C=* Copyright (C) 1992-2005  Health Research Inc.                     *
 C=*                                                                   *
 C=* HEALTH RESEARCH INCORPORATED (HRI),                               *   
 C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                  *
 C=*                                                                   *
 C=* Email:  spider@@wadsworth.org                                      *
 C=*                                                                   *
 C=* This program is free software; you can redistribute it and/or     *
 C=* modify it under the terms of the GNU General Public License as    *
 C=* published by the Free Software Foundation; either version 2 of    *
 C=* the License, or (at your option) any later version.               *
 C=*                                                                   *
 C=* This program is distributed in the hope that it will be useful,   *
 C=* but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 C=* General Public License for more details.                          *
 C=*                                                                   *
 C=* You should have received a copy of the GNU General Public License *
 C=* along with this program; if not, write to the                     *
 C=* Free Software Foundation, Inc.,                                   *
 C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.     *
 C=*                                                                   *
C *********************************************************************
C
C    getoldstack
C
C    PURPOSE:      Set next image in a stack      
C
C    PARAMETERS:     
C
C***********************************************************************
*/

#include "common.h"
#include "routines.h"

/****************************  getoldstack  **************************/

 int getoldstack(FILEDATA * filedatat, int imgnum, int wantnext, int sayit)

 {   
 float	    header[256];
 char	    outstr[100];
 int        inuse, nsam, nrow, headbyt, nslice;

  //printf("imgnum   %d \n", imgnum);
  if (imgnum > filedatat->maxim)
     { return 0; }

  /* Set offset for reading header from file */
  headbyt = filedatat->headbyt;
  nsam    = filedatat->nsam;
  nrow    = filedatat->nrow;
  nslice  = filedatat->nslice;

  filedatat->offset = headbyt + 
     (imgnum - 1) *  (headbyt + nsam * nrow * nslice * 4);

  inuse = FALSE;

  while (!inuse)
     {    
     /* Read header of stacked image file */
     if (!redlin(filedatat,header,256,0)) return -1;

     inuse = (header[26] != 0);

     if (!inuse && !wantnext) 
        {  /* Desired image does not exist, have error */
        printf("Desired image not in use. \n");
        return -1;
        }
     else if (!inuse && wantnext)
        {  /* Image does not exist, try next one */
        imgnum++; 
        if (imgnum > filedatat->maxim) return 0;
        }
     }  /* Continue until an image is obtained */
 
  filedatat -> imami    = header[5];
  filedatat -> fmax_spi = header[6];
  filedatat -> fmin_spi = header[7];
  filedatat -> av       = header[8];
  filedatat -> sig      = header[9];
	
  filedatat -> iangle   = header[13];
  filedatat -> phi      = header[14];
  filedatat -> theta    = header[15];
  filedatat -> gamma    = header[16];
	
  if (filedatat->imami != 1)  
        { norm(filedatat); }
	
  fmin_spi = filedatat->fmin_spi;
  fmax_spi = filedatat->fmax_spi;
  if (sayit)
     {
     sprintf(outstr, "@@ %d:  Range: %f.... %f", imgnum, fmin_spi, fmax_spi);
     spout(outstr);
     }

  return imgnum;
}


 
@


1.11
log
@cosmetic
@
text
@d2 1
a2 1
/*$Header: /usr8/web/new/RCS/getoldstack.c,v 1.10 2007/11/01 19:33:45 leith Exp $*/
d57 1
a57 1
  printf("imgnum   %d \n", imgnum);
@


1.10
log
@fmin ->fmin_spi..
@
text
@d2 1
a2 1
/*$Header: /net/bali/usr1/web/src/RCS/getoldstack.c,v 1.9 2005/10/18 17:00:03 leith Exp $*/
d38 1
a38 1
C    PURPOSE:      SET NEXT IMAGE IN A STACK      
a45 1
#include "files.h"
a46 1
#include "std.h"
d57 1
d59 1
a59 1
     { return 0;}
d61 1
a61 1
  /* set offset for reading header from file */
d68 1
a68 1
     (imgnum - 1) * (headbyt + nsam * nrow * nslice * 4);
d74 1
a74 1
     /* read header of stacked image file */
a76 1
     /* inuse = (header[24] != 0); mar 03 */
d80 2
a81 1
        {  /* desired image does not exist, have error */
d85 1
a85 1
        { /* image does not exist, try next one */
d89 1
a89 2

     } /* continue until an image is obtained */
d91 5
a95 5
  filedatat -> imami   = header[5];
  filedatat -> fmax_spi    = header[6];
  filedatat -> fmin_spi    = header[7];
  filedatat -> av      = header[8];
  filedatat -> sig     = header[9];
d97 4
a100 4
  filedatat -> iangle  = header[13];
  filedatat -> phi     = header[14];
  filedatat -> theta   = header[15];
  filedatat -> gamma   = header[16];
d103 1
a103 1
        {norm(filedatat);}
@


1.9
log
@GPL
@
text
@d2 1
a2 1
/*$Header: /net/bali/usr1/web/src/RCS/getoldstack.c,v 1.8 2003/03/24 18:53:09 leith Exp $*/
d94 2
a95 2
  filedatat -> fmax    = header[6];
  filedatat -> fmin    = header[7];
d107 2
a108 2
  fmin = filedatat->fmin;
  fmax = filedatat->fmax;
d111 1
a111 1
     sprintf(outstr, "@@ %d:  Range: %f.... %f", imgnum, fmin, fmax);
@


1.8
log
@// not in sgi c
@
text
@d2 1
a2 1
/*$Header: /net/bali/usr1/web/src/RCS/getoldstack.c,v 1.7 2003/03/13 16:10:58 leith Exp leith $*/
d11 23
a33 5
C *  COPYRIGHT (C)1992,1996  HEALTH RESEARCH INC, EMPIRE STATE PLAZA, *
C *    ALBANY, NY 12201.  THE CONTENTS OF THIS DOCUMENT ARE           *
C *    PROPRIETARY TO HEALTH RESEARCH INC., AND ARE NOT TO BE         *
C *    DISCLOSED TO OTHERS OR USED FOR PURPOSES OTHER THAN INTENDED   *
C *    WITHOUT WRITTEN APPROVAL OF HEALTH RESEARCH INC.               *
@


1.7
log
@header[26] (+1!!!) is imgnum now
@
text
@d2 1
a2 1
/*$Header: /net/bali/usr1/web/src/RCS/getoldstack.c,v 1.6 2000/06/29 15:50:52 leith Exp leith $*/
d60 1
a60 1
     //inuse = (header[24] != 0); mar 03
@


1.6
log
@cosmetic?
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/getoldstack.c,v 1.5 1999/10/15 13:12:02 leith Exp $*/
d60 2
a61 1
     inuse = (header[24] != 0);
@


1.5
log
@increment imgnum did not reset header pointer
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/getoldstack.c,v 1.3 1999/10/04 14:40:48 leith Exp leith $*/
d50 2
a51 2
  filedatat->offset = 
     (headbyt * imgnum) + (imgnum - 1) * nsam * nrow * nslice * 4;
d58 1
a58 1
     if (!redlin(filedatat,header,256,1)) return -1;
a84 3
  /* increment offset for reading image data from stacked file */
  filedatat -> offset += filedatat -> headbyt;
    
@


1.4
log
@removed normalizing msg
@
text
@d60 1
a60 1
     inuse = (header[24] == 1);
@


1.3
log
@stack support
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/getoldstack.c,v 1.2 1999/09/30 17:11:40 leith Exp leith $*/
d89 1
a89 1
        {spout("normalizing agin!!!!!!!"); norm(filedatat);}
@


1.2
log
@added filedata to getoldstack parameters
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/getoldstack.c,v 1.1 1999/09/29 17:32:11 leith Exp leith $*/
d41 1
a41 1
  if (imgnum > maxim)
d69 1
a69 1
        if (imgnum > maxim) return 0;
d89 1
a89 1
        {norm(filedatat);}
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/stackdis.c,v 1.3 1998/03/05 17:05:13 leith Exp $*/
d34 1
a34 1
 int getoldstack(int imgnum, int wantnext, int sayit)
d45 4
a48 4
  headbyt = filedata->headbyt;
  nsam    = filedata->nsam;
  nrow    = filedata->nrow;
  nslice  = filedata->nslice;
d50 1
a50 1
  filedata->offset = 
d58 1
a58 1
     if (!redlin(filedata,header,256,1)) return -1;
d74 5
a78 5
  filedata -> imami   = header[5];
  filedata -> fmax    = header[6];
  filedata -> fmin    = header[7];
  filedata -> av      = header[8];
  filedata -> sig     = header[9];
d80 4
a83 4
  filedata -> iangle  = header[13];
  filedata -> phi     = header[14];
  filedata -> theta   = header[15];
  filedata -> gamma   = header[16];
d86 1
a86 1
  filedata -> offset += filedata -> headbyt;
d88 2
a89 2
  if (filedata->imami != 1)  
        {norm(filedata);}
d91 2
a92 2
  fmin = filedata->fmin;
  fmax = filedata->fmax;
@
