head	1.9;
access;
symbols
	pre-tilt-improve:1.9
	pre_surf_fromtop:1.9
	pre_neednewmap:1.9
	pre_apppluss_remove:1.9
	pre_tiltpair_chng:1.9
	pre_GPL:1.8;
locks;
comment	@ * @;


1.9
date	2005.10.18.16.59.44;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	95.11.14.16.16.41;	author liy;	state Exp;
branches;
next	1.7;

1.7
date	94.11.21.19.17.47;	author mladjadj;	state Exp;
branches;
next	1.6;

1.6
date	94.11.21.18.32.31;	author mladjadj;	state Exp;
branches;
next	1.5;

1.5
date	94.09.07.19.29.26;	author mladjadj;	state Exp;
branches;
next	1.4;

1.4
date	94.02.14.10.12.56;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	93.11.18.10.47.01;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	93.11.15.16.59.21;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	93.11.10.15.20.49;	author leith;	state Exp;
branches;
next	;


desc
@profile routine
@


1.9
log
@GPL
@
text
@/*$Header: /net/ithaca/usr1/web/src/RCS/profilemen.c,v 1.8 1995/11/14 16:16:41 liy Exp $*/
/*
*****************************************************************************
*  profilemen.c         6/16/93
*
*  wid_profilemen.for (in VAX) ported to UNIX
*
C **********************************************************************
* *  AUTHOR:  Mahieddine Ladjadj                                           *
 C=* FROM: WEB - VISUALIZER FOR SPIDER MODULAR IMAGE PROCESSING SYSTEM *
 C=* Copyright (C) 1992-2005  Health Research Inc.                     *
 C=*                                                                   *
 C=* HEALTH RESEARCH INCORPORATED (HRI),                               *   
 C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                  *
 C=*                                                                   *
 C=* Email:  spider@@wadsworth.org                                      *
 C=*                                                                   *
 C=* This program is free software; you can redistribute it and/or     *
 C=* modify it under the terms of the GNU General Public License as    *
 C=* published by the Free Software Foundation; either version 2 of    *
 C=* the License, or (at your option) any later version.               *
 C=*                                                                   *
 C=* This program is distributed in the hope that it will be useful,   *
 C=* but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 C=* General Public License for more details.                          *
 C=*                                                                   *
 C=* You should have received a copy of the GNU General Public License *
 C=* along with this program; if not, write to the                     *
 C=* Free Software Foundation, Inc.,                                   *
 C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.     *
 C=*                                                                   *
C **********************************************************************
*
*    PROFILEMEN()
*
*    PURPOSE:
*
*    PARAMETERS:
*
*
*
*****************************************************************************
*/

#include "common.h"
#include "routines.h"

#include <Xm/ToggleBG.h>

 /* internal functions */
 void profilemen_buts (Widget, caddr_t, caddr_t);
 void profilemen_buta (Widget, caddr_t, caddr_t);
 void specialline     (Widget, caddr_t, caddr_t);
 void spline_cb       (Widget, caddr_t, caddr_t);

 /* external common variables */
 extern int   first, horizbar, leavebar, normbar, permbar;
 extern int   spline;			/* special line flag */
 extern int   linenum;			/* the line number of the special line */
 extern GC icontxm;
 extern void  profile_pop(Widget, XEvent *, String *, Cardinal *);

 /* common variables */
 Widget iw_profilemen = (Widget) 0;
 Widget iw_rowcol, iw_horizbar, iw_leavebar, iw_permbar, iw_normbar;
 Widget iw_spline;			/* the widget for special line picking */
 Widget	iw_message;			/* the note message widget */

/************************   profilemen   ******************************/

void profilemen(void)
{
   Widget iw_pushc, iw_pusha, iw_pushs, iw_dum = (Widget) 0;

   if (iw_profilemen <= (Widget) 0)
     {
       /* create a dialog box */
       iw_profilemen = wid_dialog(iw_win,0,"profile_options",-1,-1);

       /* profile menu widget */
       iw_rowcol = wid_rowcol(iw_profilemen,'v',-1,-1);
  
       /* create a toggle box for horizbar */
       iw_horizbar = wid_toggleg(iw_rowcol,0,"horizontal",
                    horizbar,toggle2_cb,(caddr_t) &horizbar,-1,-1);

       /* create a toggle box for leavebar */
       iw_leavebar = wid_toggleg(iw_rowcol,0,"leave bar",
                    leavebar,toggle2_cb,(caddr_t) &leavebar,-1,-1);

       /* create a toggle box for permbar */
       iw_permbar = wid_toggleg(iw_rowcol,0,"permanent profile",
                    permbar,toggle2_cb,(caddr_t) &permbar,-1,-1);

       /* create a toggle box for normbar */
       iw_normbar = wid_toggleg(iw_rowcol,0,"normalize along bar only",
                    normbar,toggle2_cb,(caddr_t) &normbar,-1,-1); 

       /* create a toggle box for normbar */
       iw_spline = wid_toggleg(iw_rowcol,0,"Special line",
                    spline,specialline,(caddr_t) &spline,-1,-1); 

       /* create a push button for stop, cancel & apply */
       iw_dum = wid_stdbut(iw_rowcol,iw_profilemen,
                           &iw_pushs,&iw_pushc,&iw_pusha,"SA",
                           profilemen_buts,fin_cb,profilemen_buta,
                           NULL);
   }  
   XtManageChild(iw_profilemen);

   return;
 }

/*********************** specialline   ********************/

void specialline(Widget iw_temp, caddr_t data, caddr_t call_data)
{
    Widget	iw_linenum;

    spline  = XmToggleButtonGadgetGetState(iw_spline);

    /* draw the profile graph for the special line */
    if (spline && nsam > 1 && nrow > 1) {

   	/* create text input box */
    	iw_linenum = wid_text(iw_win, 0, 
	        "Line number:", 
		(char *) NULL, *spline_cb, NULL, 0, 0);
	}
}

/*********************** spline_cb   ********************/

void spline_cb(Widget iw_temp, caddr_t data, caddr_t call_data)
 {
 XmString    txt_string;
 char        *text;

 XmSelectionBoxCallbackStruct *cbs =
      (XmSelectionBoxCallbackStruct *) call_data;
 
 txt_string = cbs -> value;
 text = extractstr(cbs -> value);
 linenum = atoi(text);

 iw_message = wid_mess(iw_win, 0, 
    "Note: Click the left button\n      to draw the graph\n      after ACCEPT.", 
     -1, -1);
}		

/*********************** profilemen_buta   ********************/

void profilemen_buta(Widget iw_temp, caddr_t data, caddr_t call_data)
  {
     /* get  toggle states */
     normbar  = XmToggleButtonGadgetGetState(iw_normbar);
     permbar  = XmToggleButtonGadgetGetState(iw_permbar);
     horizbar = XmToggleButtonGadgetGetState(iw_horizbar);
     leavebar = XmToggleButtonGadgetGetState(iw_leavebar);

     /* cancel menu and stop this routine */
     if (iw_profilemen != NULL)
         XtUnmanageChild(iw_profilemen);

     /* remove message window */
     if (iw_message != (Widget)0)
         XtUnmanageChild(iw_message);
  }

/*********************** profilemen_buts   ********************/

void profilemen_buts(Widget iw_temp, caddr_t data, caddr_t call_data)
  {
     /* remove popup button menu */
     showbutx("","","",TRUE);

     /* cancel menu and stop this routine */
     if (iw_profilemen != NULL)
       XtUnmanageChild(iw_profilemen);

     /* stop masking mask button assignments */
     XtUninstallTranslations(iw_win);

     /* close image file */
     closefile(filedata);

     /* release GC created for profile.c */
     XFreeGC(idispl, icontxm);
  }
@


1.8
log
@added <special line> function
@
text
@d1 1
a1 1
/*$Header: /net/alwyn/usr1/web/src/RCS/profilemen.c,v 1.7 1994/11/21 19:17:47 mladjadj Exp $*/
d8 1
a8 1
* **************************************************************************
d10 24
a33 7
* *  COPYRIGHT (C)1990 , WADSWORTH CENTER FOR LABORATORIES AND             *
* *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
* *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
* *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
* *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
* *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
* **************************************************************************
@


1.7
log
@delete sprintf(..cval..)
@
text
@d1 1
a1 1
/*$Header: /net/alwyn/usr1/web/src/RCS/profilemen.c,v 1.6 1994/11/21 18:32:31 mladjadj Exp mladjadj $*/
d37 2
d42 2
d45 1
d50 2
d83 4
d98 37
d148 4
@


1.6
log
@correct arg passing of &leavebar to wid_toggleg
@
text
@d1 1
a1 1
/*$Header: /net/alwyn/usr1/web/src/RCS/profilemen.c,v 1.5 1994/09/07 19:29:26 mladjadj Exp mladjadj $*/
a60 1
       sprintf(cval,"%d",horizbar);
a64 1
       sprintf(cval,"%d",leavebar);
a68 1
       sprintf(cval,"%d",permbar);
a72 1
       sprintf(cval,"%d",normbar);
@


1.5
log
@get toggle state fixed
@
text
@d1 1
a1 1
/*$Header: /alwyn/usr1/web//RCS/profilemen.c,v 1.4 94/02/14 10:12:56 leith Exp $*/
a50 1
   char cval[4];
d63 1
a63 1
                    horizbar,toggle2_cb,cval,-1,-1);
d68 1
a68 1
                    leavebar,toggle2_cb,cval,-1,-1);
d73 1
a73 1
                    permbar,toggle2_cb,cval,-1,-1);
d78 1
a78 1
                    normbar,toggle2_cb,cval,-1,-1); 
@


1.4
log
@bug in filedata open test
@
text
@d1 1
a1 1
/*$Header: /alwyn/usr1/web//RCS/profilemen.c,v 1.3 93/11/18 10:47:01 leith Exp Locker: leith $*/
d30 1
d32 1
a32 13
 /* function prototypes */
 extern Widget wid_rowcol   (Widget, char , int, int);
 extern Widget wid_stdbut   (Widget, Widget, Widget*, Widget*, Widget*,
                              char *, void (*)(), void (*)(), void (*)(),
                              caddr_t);
 extern void   fin_cb       (Widget, caddr_t, caddr_t);
 extern Widget wid_toggleg  (Widget, Widget, char *, int,
                              void (*)() ,int *, int, int);
 extern void   toggle2_cb    (Widget, int *, XtPointer);
 extern Widget wid_dialog   (Widget, Widget, char *, int, int);
 extern int    closefile    (FILEDATA *);
 extern void   showbutx     (char *, char *, char *, int);
 extern void   spout        (char *);    /* delete this */
d36 1
d51 1
d56 1
a56 1
       iw_profilemen = wid_dialog(iw_win,0,"profile options",-1,-1);
d62 1
d64 1
a64 1
                     horizbar,toggle2_cb,&horizbar,-1,-1);
d67 1
d69 1
a69 1
                     leavebar,toggle2_cb,&leavebar,-1,-1);
d72 1
d74 1
a74 1
                    permbar,toggle2_cb,&permbar,-1,-1);
d77 1
d79 1
a79 1
                    normbar,toggle2_cb,&normbar,-1,-1);
d83 2
a84 2
                           &iw_pushs,&iw_pushc,&iw_pusha,"SC",
                           profilemen_buts,fin_cb,fin_cb,
a85 1
  
d92 15
d118 1
a118 1
     /* cancel menu, stop masking mask button assignments */
@


1.3
log
@changed button from finished to cancel
@
text
@d1 1
a1 1
/*$Header: /alwyn/usr1/web//RCS/profilemen.c,v 1.2 93/11/15 16:59:21 leith Exp Locker: leith $*/
d112 2
a113 2
     /* close image file if open */
     if ( (int) filedata != NULL) closefile(filedata);
@


1.2
log
@new
@
text
@d1 1
a1 1
/*$Header$*/
d88 1
a88 1
                           &iw_pushs,&iw_pushc,&iw_pusha,"SF",
@


1.1
log
@Initial revision
@
text
@d1 1
d39 1
a39 1
 extern void   profile_cb    (Widget, int *, XtPointer);
d72 1
a72 1
                     horizbar,profile_cb,&horizbar,-1,-1);
d76 1
a76 1
                     leavebar,profile_cb,&leavebar,-1,-1);
d80 1
a80 1
                    permbar,profile_cb,&permbar,-1,-1);
d84 1
a84 1
                    normbar,profile_cb,&normbar,-1,-1);
@
