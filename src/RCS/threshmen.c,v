head	1.4;
access;
symbols
	pre-tilt-improve:1.3
	pre_surf_fromtop:1.3
	pre_neednewmap:1.2
	pre_apppluss_remove:1.2
	pre_tiltpair_chng:1.2
	pre_GPL:1.1;
locks;
comment	@ * @;


1.4
date	2018.12.07.17.03.34;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.26.12.14.23;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.18.16.59.56;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	96.07.31.20.28.21;	author leith;	state Exp;
branches;
next	;


desc
@@


1.4
log
@bollingers_email_and_cosmetic
@
text
@
/*$Header: /usr8/web/src/RCS/threshmen.c,v 1.3 2011/09/26 12:14:23 leith Exp $*/

/*
C++*********************************************************************
C
C threshmen
C
C **********************************************************************
C *  AUTHOR:  ArDean Leith                                                 *
 C=* FROM: WEB - VISUALIZER FOR SPIDER MODULAR IMAGE PROCESSING SYSTEM *
 C=* Copyright (C) 1992-2005  Health Research Inc.                     *
 C=*                                                                   *
 C=* HEALTH RESEARCH INCORPORATED (HRI),                               *   
 C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                  *
 C=*                                                                   *
 C=* Email:  spider@@wadsworth.org                                      *
 C=*                                                                   *
 C=* This program is free software; you can redistribute it and/or     *
 C=* modify it under the terms of the GNU General Public License as    *
 C=* published by the Free Software Foundation; either version 2 of    *
 C=* the License, or (at your option) any later version.               *
 C=*                                                                   *
 C=* This program is distributed in the hope that it will be useful,   *
 C=* but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 C=* General Public License for more details.                          *
 C=*                                                                   *
 C=* You should have received a copy of the GNU General Public License *
 C=* along with this program; if not, write to the                     *
 C=* Free Software Foundation, Inc.,                                   *
 C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.     *
 C=*                                                                   *
C **********************************************************************
C
C    threshmen
C
C    PURPOSE:         Display threshmen menu
C
C    CALLED BY:       imagemen
C
C    CALL TREE:


                  
   imagemen       
      |          
      v           
  imagemen_cb     
      |           
      v           
   imagemen1      
      |            
      v           
   filtermen --> threshmen --> threshmen_buta --> filter_but --> thresh

C***********************************************************************
*/

#include <Xm/Text.h>
#include <Xm/Scale.h>
#include "common.h"
#include "routines.h"
#include "filter.h"

 /* Internal function prototypes */
 static void   threshmen_buta(Widget, XtPointer, XtPointer);

 /* External global variables used here */

 /* Common variables used here */
 static Widget   iw_threshmen, iw_lower,    iw_lowerval,  
                 iw_upper,     iw_upperval, iw_kgo, iw_kend;

 static int      kgo=0, kend=100;

/*********************************** threshmen **********************/

 void threshmen(Widget iw_temp, XtPointer data, XtPointer call_data)
 { 
 char     cval11[12];
 Widget   iw_rowcol, iw_rowcolh;
 Widget   iw_pushc, iw_pusha, iw_dums;

 if (iw_threshmen <= (Widget)0)
    {   /* Create thresh menu widget first */

    iw_threshmen = wid_dialog(iw_win,iw_threshmen,
                           "Threshold values",20,20);
    iw_rowcol    = wid_rowcol(iw_threshmen,'v',-1,-1);

    /* Create a horizontal row-col widget for scales */
    iw_rowcolh = wid_rowcol(iw_rowcol, 'h', -1,-1);

    /* create scale widget for lower --------------------------- kgo */
    kgo     = 0;
    iw_kgo  = wid_scale(iw_rowcolh, 0, "", 0,100,  kgo, 
                        180,50, -1,-1);

    /* Create scale widget for upper -------------------------- kend */
    kend    = 100;
    iw_kend = wid_scale(iw_rowcolh, 0, "", 0,100,  kend, 
                         180,50, -1,-1);

    XtAddCallback(iw_kgo,XmNvalueChangedCallback,
                           (XtCallbackProc) threshmen,"0");
    XtAddCallback(iw_kend,XmNvalueChangedCallback,
                           (XtCallbackProc) threshmen,"0");

    /* Create text box for lower ----------------------------  lower */
    lower = fminold + kgo * (fmaxold - fminold) / 100.0;
    sprintf(cval11,"%f",lower);
    iw_lower = wid_textboxb(iw_rowcol,iw_lower,
                              "Lower Threshold:",cval11,10);

    /* Create text box for lowerval ----------------------  lowerval */
    lowerval = fminold;
    sprintf(cval11,"%f",lowerval);
    iw_lowerval = wid_textboxb(iw_rowcol,iw_lowerval,
                               "Lower Value:    ",cval11,10);

    /* Create text box for upper ----------------------------  upper */
    upper = fminold + kend * (fmaxold - fminold)/ 100.0;
    sprintf(cval11,"%f",upper);
    iw_upper = wid_textboxb(iw_rowcol,iw_upper,
                               "Upper Threshold:",cval11,10);

    /* Create text box for upperval ----------------------  upperval */
    upperval = fmaxold;
    sprintf(cval11,"%f",upperval);
    iw_upperval = wid_textboxb(iw_rowcol,iw_upperval,
                              "Upper Value:    ",cval11,10);

    /* Create accept boxes  ---------------------------------- apply */
    iw_pushc = (Widget) 0;
    iw_pusha = (Widget) 0;
    wid_stdbut(iw_rowcol, iw_threshmen, 
               &iw_dums, &iw_pushc, &iw_pusha, 
               "CA",fin_cb,fin_cb,threshmen_buta, NULL);
    }

 else
    {   /* Thresh menu widget already exists, update it */

    /* Get kgo & kend */
    XmScaleGetValue(iw_kgo, &kgo);
    XmScaleGetValue(iw_kend,&kend);

    /* Alter text box for lower -----------------------------  lower */
    lower = fminold + kgo * (fmaxold - fminold)/ 100.0;
    sprintf(cval11,"%f",lower);
    iw_lower = wid_textboxb(iw_rowcol,iw_lower,
                            "Lower Threshold:",cval11,10);

    /* Create text box for lowerval ----------------------  lowerval */
    sprintf(cval11,"%f",lowerval);
    iw_lowerval = wid_textboxb(iw_rowcol,iw_lowerval,
                               "Lower Value:    ",cval11,10);

    /* Alter text box for upper -----------------------------  upper */
    upper = fminold + kend * (fmaxold - fminold)/ 100.0;
    sprintf(cval11,"%f",upper);
    iw_upper = wid_textboxb(iw_rowcol,iw_upper,
                            "Upper Threshold:",cval11,10);

    /* alter text box for upperval ------------------------  upperval */
    sprintf(cval11,"%f",upperval);
    iw_upperval = wid_textboxb(iw_rowcol,iw_upperval,
                               "Upper Value:    ",cval11,10);
   }

 XtManageChild(iw_threshmen);
 }



 /********************* thresh accept button callback *****************/

 void threshmen_buta(Widget iw_temp, XtPointer data, XtPointer call_data)
 {
 char *         string;
 char           filtertype[2];

 /* Find thresholds */
 string = XmTextGetString(iw_lower);
 sscanf(string,"%f",&lower);
 if (string) free(string);

 string = XmTextGetString(iw_lowerval);
 sscanf(string,"%f",&lowerval);
 if (string) free(string);

 string = XmTextGetString(iw_upper);
 sscanf(string,"%f",&upper);
 if (string) free(string);

 string = XmTextGetString(iw_upperval);
 sscanf(string,"%f",&upperval);
 if (string) free(string);

 filtertype[0] = 'u';
 filtertype[1] = '\0';
 filter_but(iw_temp, (XtPointer) filtertype, call_data);
 }
@


1.3
log
@ngo --> kgo, nend --> kend
@
text
@d2 1
a2 1
/*$Header: /usr8/web/src/RCS/threshmen.c,v 1.2 2005/10/18 16:59:56 leith Exp leith $*/
d64 1
d67 1
a67 2
 void          threshmen_buta(Widget, XtPointer, XtPointer);
 void          threshmen     (Widget, XtPointer, XtPointer);
a69 2
 extern float    fminold, fmaxold;
 extern float    lower, lowerval, upper,  upperval;
@


1.2
log
@GPL
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/threshmen.c,v 1.1 1996/07/31 20:28:21 leith Exp $*/
d38 1
a38 1
C    PURPOSE:         display threshmen menu
d65 1
a65 1
 /* internal function prototypes */
d69 1
a69 1
 /* external global variables used here */
d73 1
a73 1
 /* common variables used here */
d75 3
a77 2
                 iw_upper,     iw_upperval, iw_ngo, iw_nend;
 static int      ngo=0, nend=100;
d88 1
a88 1
    {   /* create thresh menu widget first */
d94 1
a94 1
    /* create a horizontal row-col widget for scales */
d97 3
a99 3
    /* create scale widget for lower --------------------------- ngo */
    ngo     = 0;
    iw_ngo  = wid_scale(iw_rowcolh, 0, "", 0,100,  ngo, 
d102 3
a104 3
    /* create scale widget for upper -------------------------- nend */
    nend    = 100;
    iw_nend = wid_scale(iw_rowcolh, 0, "", 0,100,  nend, 
d107 1
a107 1
    XtAddCallback(iw_ngo,XmNvalueChangedCallback,
d109 1
a109 1
    XtAddCallback(iw_nend,XmNvalueChangedCallback,
d112 2
a113 2
    /* create text box for lower ----------------------------  lower */
    lower = fminold + ngo * (fmaxold - fminold) / 100.0;
d118 1
a118 1
    /* create text box for lowerval ----------------------  lowerval */
d124 2
a125 2
    /* create text box for upper ----------------------------  upper */
    upper = fminold + nend * (fmaxold - fminold)/ 100.0;
d130 1
a130 1
    /* create text box for upperval ----------------------  upperval */
d136 1
a136 1
    /* create accept boxes  ---------------------------------- apply */
d145 1
a145 1
    {   /* thresh menu widget already exists, update it */
d147 3
a149 3
    /* get ngo & nend */
    XmScaleGetValue(iw_ngo, &ngo);
    XmScaleGetValue(iw_nend,&nend);
d151 2
a152 2
    /* alter text box for lower -----------------------------  lower */
    lower = fminold + ngo * (fmaxold - fminold)/ 100.0;
d157 1
a157 1
    /* create text box for lowerval ----------------------  lowerval */
d162 2
a163 2
    /* alter text box for upper -----------------------------  upper */
    upper = fminold + nend * (fmaxold - fminold)/ 100.0;
d186 1
a186 1
 /* find thresholds */
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/filtermen.c,v 1.39 1996/04/25 14:18:01 leith Exp leith $*/
d11 23
a33 6
C *  COPYRIGHT (C)1993, WADSWORTH CENTER FOR LABORATORIES AND              *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH                            *
@
