head	1.13;
access;
symbols
	pre-tilt-improve:1.13
	pre_surf_fromtop:1.13
	pre_neednewmap:1.13
	pre_apppluss_remove:1.13
	pre_tiltpair_chng:1.13
	pre_GPL:1.12;
locks;
comment	@ * @;


1.13
date	2005.10.18.16.59.56;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	99.08.04.16.54.30;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	97.02.26.15.05.52;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	96.03.26.15.07.46;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	95.07.11.17.28.13;	author mladjadj;	state Exp;
branches;
next	1.8;

1.8
date	95.03.30.17.02.07;	author mladjadj;	state Exp;
branches;
next	1.7;

1.7
date	95.02.23.15.36.44;	author liy;	state Exp;
branches;
next	1.6;

1.6
date	95.02.02.16.41.25;	author liy;	state Exp;
branches;
next	1.5;

1.5
date	95.01.26.20.17.24;	author liy;	state Exp;
branches;
next	1.4;

1.4
date	95.01.23.10.00.14;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	94.05.12.12.40.20;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.01.28.17.14.13;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	93.11.10.10.11.37;	author leith;	state Exp;
branches;
next	;


desc
@@


1.13
log
@GPL
@
text
@
/*$Header: /net/ithaca/usr1/web/src/RCS/montmen2.c,v 1.12 1999/08/04 16:54:30 leith Exp $*/
/*

C++************************************************************************
C
C MONTMEN2 -- CREATED JUNE 91 FROM WIMONT
C          -- CONVERTED TO C  -- OCT 92 al
C **********************************************************************
C *  AUTHOR:  ArDean Leith                                                 *
 C=* FROM: WEB - VISUALIZER FOR SPIDER MODULAR IMAGE PROCESSING SYSTEM *
 C=* Copyright (C) 1992-2005  Health Research Inc.                     *
 C=*                                                                   *
 C=* HEALTH RESEARCH INCORPORATED (HRI),                               *   
 C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                  *
 C=*                                                                   *
 C=* Email:  spider@@wadsworth.org                                      *
 C=*                                                                   *
 C=* This program is free software; you can redistribute it and/or     *
 C=* modify it under the terms of the GNU General Public License as    *
 C=* published by the Free Software Foundation; either version 2 of    *
 C=* the License, or (at your option) any later version.               *
 C=*                                                                   *
 C=* This program is distributed in the hope that it will be useful,   *
 C=* but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 C=* General Public License for more details.                          *
 C=*                                                                   *
 C=* You should have received a copy of the GNU General Public License *
 C=* along with this program; if not, write to the                     *
 C=* Free Software Foundation, Inc.,                                   *
 C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.     *
 C=*                                                                   *
C **********************************************************************
C
C MONTMEN2
C
C PURPOSE:         DISPLAY MONTAGE MENU FOR 2-D FILES
C
C VARIABLES:       NAMES      LOGICAL FLAG TO PRINT NAMES
C                  IXUL,IYUL  UPPER LEFT CORNER FOR LAST IMAGE
C                  MARX,MARY  X & Y MARGINS FOR MONTAGE
C
C CALLED BY:       
C
C**************************************************************************
*/

#include <Xm/Scale.h>
#include <Xm/Text.h>
#include <Xm/ToggleBG.h>

#include "common.h"
#include "routines.h"

/* internal function prototypes */
 void          montmen2_buta(Widget iw_temp, XtPointer, XtPointer);
 void          montmen2_butc(Widget iw_temp, XtPointer, XtPointer);

 /* file variables */
 static Widget   iw_ixul, iw_iyul, iw_nprow, iw_numfil, iw_movie;
 static Widget   iw_montmen2 = (Widget)0, iw_pushc, iw_pusha;

 /* externally used variables */
 int             lastfile;           /* used in mont2 */

 /* externally defined variables */
 extern int      icattyp;            /* defined in imagemen.c */

 /************************************************************/

 void montmen2(void)

 { 
 Widget iw_rowcol, iw_rowcol3;
 Widget iw_dums;
 char   cval[9];

 if (iw_montmen2 == (Widget)0)
    {   /* create 2-D montage menu widget first */

    iw_montmen2 = wid_dialog(iw_win, 0, "montage options", -1, -1);
    iw_rowcol   = wid_rowcol(iw_montmen2, 'v', -1, -1);

    /* create text box for numfil input ---------------------- numfil */
    strcpy(cval,"*");
    iw_numfil = wid_textboxb(iw_rowcol, 0, "LAST FILE NUMBER:", 
                            cval, 6);

    /* create label box for location ----------------------- location */
    iw_rowcol3  = wid_rowcol(iw_rowcol,'h',-1,-1);
                  wid_labelg(iw_rowcol3,0, "LOCATION:",-1,-1);


    /* create text boxes for ixuln & iyuln -------------------- ixuln */
    if (keepxy) 
       { /* do not want to reset ixuln & iyuln */
       sprintf(cval,"%4d",ixuln);
       iw_ixul = wid_textboxb(iw_rowcol3,0,"X",cval,4);
       sprintf(cval,"%4d",iyuln);
       iw_iyul = wid_textboxb(iw_rowcol3,0,"Y",cval,4);
       }
    else
       {
       iw_ixul = wid_textboxb(iw_rowcol3,0,"X","*",4);
       iw_iyul = wid_textboxb(iw_rowcol3,0,"Y","*",4);
       }

    /* create text box for pictures / row input --------------- nprow */
    strcpy(cval,"*AS FITS");
    iw_nprow = wid_textboxb(iw_rowcol, 0, "FRAMES / ROW:", 
                            cval,8);
    /* create toggle box for movie ---------------------------- movie */
    iw_movie = wid_togmen(iw_rowcol,0,"MOVIE",movie,-1,-1);

    /* create box for apply ----------------------------------- apply */
    wid_stdbut(iw_rowcol, iw_montmen2, &iw_dums, &iw_pushc, 
                        &iw_pusha,  "CA",
                        fin_cb, montmen2_butc ,montmen2_buta, NULL);

    }

 else
    {   /* montage menu widget already exists, update it */
    /* update text boxes for ixuln & iyuln -------------------- ixuln */
    if (keepxy) 
       { /* do not want to reset ixuln & iyuln */
       sprintf(cval,"%4d",ixuln);
       iw_ixul = wid_textboxb(iw_rowcol3,iw_ixul,"X",cval,4);
       sprintf(cval,"%4d",iyuln);
       iw_iyul = wid_textboxb(iw_rowcol3,iw_iyul,"Y",cval,4);
       }
    else
       {
       iw_ixul = wid_textboxb(iw_rowcol3,iw_ixul,"X","*",4);
       iw_iyul = wid_textboxb(iw_rowcol3,iw_iyul,"Y","*",4);
       }

    /* update text box for pictures / row input --------------- nprow */
    if (samefile)  
       sprintf(cval,"%4d",nprow);
    else
       strcpy(cval,"*AS FITS");
    iw_nprow = wid_textboxb(iw_rowcol, iw_nprow, "FRAMES / ROW:", 
                            cval,8);

    }
    /* movie option not relevant for categorize */
    if (ioper == 11)
       { XtUnmanageChild(iw_movie); }
    else
       { XtManageChild(iw_movie);   }

 XtManageChild(iw_montmen2);
 }



 /***********  montmen2_buta  (accept button callback) ********/

 void montmen2_buta(Widget iw_temp, XtPointer data, XtPointer call_data)
 {
 char *string = NULL;
 int  lastfilt, marlefo;

 /* find next image postion (if set)  */
 if (getcorner(iw_ixul,iw_iyul,&ixuln,&iyuln) == FALSE) 
       {   /* can not interpret image position */
       spout("*** Can not interpret image location! ");
       return;
       }

 if (ioper != 20)
    {
    /* interrogate movie toggle */
    movie = XmToggleButtonGadgetGetState(iw_movie);
    }
 
 /* find nprow value (number of images per row) */
 string = XmTextGetString(iw_nprow);

 if (sscanf(string,"%d",&nprow) <= 0 || nprow == 0) 
    {  /* use default for nprow */

    /* adjust marlefo for lef side position */
    marlefo = marlef;
    if (placed) marlefo = ixuln;

    if (iskip > 1)
       nprow = (iwidex - marlefo) / ((nsam / iskip)  + marx);
    else if (iskip < -1)
       nprow = (iwidex - marlefo) / ((nsam * -iskip) + marx);
    else
       nprow = (iwidex - marlefo) / ((nsam         ) + marx);
    }

 if (string) XtFree (string);

 /* find file numbers wanted */
 string = XmTextGetString(iw_numfil);

 if (strncmp(string,"*",1) == 0)
    {
    /* want all files in this series until first missing file */
    lastfile = -1;
    lastfilt = -1;
    }
 else
    {
    if (sscanf(string,"%d",&lastfilt) <= 0 || lastfilt < 0)
       {   /* can not interpret lastfilt */
       spout("*** Can not interpret number of last file in montage! ");
       if (string) XtFree (string); return;
       }
    lastfile = lastfilt;
    }
 if (string) XtFree (string);

 /* remove the montage menu */
 XtUnmanageChild(iw_montmen2);
 expos_cb(NULL,NULL,NULL);

 /* display the montage, imagego set in imagemen */
 mont2(imagego,imageend);
 }



 /***********  montmen2_butc  (cancel button callback) ********/

 void montmen2_butc(Widget iw_temp, XtPointer data, XtPointer call_data)

 {
 XtUnmanageChild(iw_montmen2);
 closefile(filedata);
 filedata = NULL;
 }
@


1.12
log
@for new scale bars
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/montmen2.c,v 1.11 1997/02/26 15:05:52 leith Exp $*/
d9 1
a9 1
C **************************************************************************
d11 24
a34 7
C *  COPYRIGHT (C)1991, WADSWORTH CENTER FOR LABORATORIES AND              *
C *  RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.      *
C *    THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     *
C *    LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  *
C *    USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF   *
C *    THE CENTER FOR LABORATORIES AND RESEARCH			           *
C **************************************************************************
@


1.11
log
@added categorize from doc file
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/montmen2.c,v 1.10 1996/03/26 15:07:46 leith Exp leith $*/
d131 6
d156 5
a160 2
 /* interrogate movie toggle */
 movie = XmToggleButtonGadgetGetState(iw_movie);
@


1.10
log
@misc
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/montmen2.c,v 1.9 1995/07/11 17:28:13 mladjadj Exp leith $*/
d48 1
a48 1
 int      lastfile;           /* used in mont2 */
d50 3
a198 9
 
 if (ioper == 11)
    {                              /* categorize images from montage */
    catmen();
    }
 else if (ioper == 16)
    {                              /* show movie */
      moviemen(TRUE); 
    }
@


1.9
log
@static Widget = (Widget)0
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/montmen2.c,v 1.8 1995/03/30 17:02:07 mladjadj Exp mladjadj $*/
a38 2
#define MAX_ARGS 2

d40 2
a41 2
 void          montmen2_buta(Widget iw_temp, caddr_t, caddr_t );
 void          montmen2_buts(Widget iw_temp, caddr_t, caddr_t );
d48 1
a48 1
 int      lastfile;
d55 1
a55 1
 Widget iw_lab1, iw_dum, iw_rowcol, iw_rowcol3;
d59 1
a59 1
 if (iw_montmen2 <= (Widget)0)
d67 1
a67 1
    iw_numfil = wid_textboxb(iw_rowcol, iw_numfil, "LAST FILE NUMBER:", 
d72 1
a72 1
    iw_lab1     = wid_labelg(iw_rowcol3,0, "LOCATION:",-1,-1);
d79 1
a79 1
       iw_ixul = wid_textboxb(iw_rowcol3,0,"X","*",4);
d81 1
a81 1
       iw_iyul = wid_textboxb(iw_rowcol3,0,"Y","*",4);
d91 1
a91 1
    iw_nprow = wid_textboxb(iw_rowcol, iw_nprow, "FRAMES / ROW:", 
d97 3
a99 2
    iw_dum = wid_stdbut(iw_rowcol, iw_montmen2, &iw_dums, &iw_pushc, &iw_pusha,  "CA",
                        fin_cb,fin_cb ,montmen2_buta, NULL);
d109 1
a109 1
       iw_ixul = wid_textboxb(iw_rowcol3,iw_ixul,"X","*",4);
d111 1
a111 1
       iw_iyul = wid_textboxb(iw_rowcol3,iw_iyul,"Y","*",4);
d135 1
a135 1
 void montmen2_buta(Widget iw_temp, caddr_t data, caddr_t call_data)
d137 2
a138 3
 char cnumb[10];
 char *string;
 int i, idign, lastfilt, nlets, nlet,marlefo;
d168 2
d184 1
a184 1
       return;
a185 1

d188 1
d211 1
a211 1
 void montmen2_butc(Widget iw_temp, caddr_t data, caddr_t call_data)
d216 1
@


1.8
log
@added ioper=16 for movie command
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/montmen2.c,v 1.7 1995/02/23 15:36:44 liy Exp mladjadj $*/
d47 1
a47 1
 static Widget   iw_montmen2, iw_pushc, iw_pusha;
@


1.7
log
@fixed Montage core dumped when cancel the first job and run it again
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/montmen2.c,v 1.6 1995/02/02 16:41:25 liy Exp liy $*/
d200 4
@


1.6
log
@modified (int)Widget again to keep web run on all machines
@
text
@d2 1
a2 1
/*$Header: /net/ithaca/usr1/web/src/RCS/montmen2.c,v 1.5 1995/01/26 20:17:24 liy Exp liy $*/
d155 1
a155 1
 if (sscanf(string,"%d",&nprow) <= 0) 
@


1.5
log
@modified (int)widget for Onyx
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/montmen2.c,v 1.4 1995/01/23 10:00:14 leith Exp liy $*/
d61 1
a61 1
 if (iw_montmen2 <= (void *)0)
@


1.4
log
@shortened wid_togglemen
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/montmen2.c,v 1.3 94/05/12 12:40:20 leith Exp Locker: leith $*/
d61 1
a61 1
 if ((int)iw_montmen2 <= 0)
@


1.3
log
@ used imagego...imageend
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web/src/RCS/montmen2.c,v 1.2 94/01/28 17:14:13 leith Exp Locker: leith $*/
d96 1
a96 1
    iw_movie = wid_togglemen(iw_rowcol,0,"MOVIE",movie,-1,-1);
@


1.2
log
@added cat routine
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web/RCS/montmen2.c,v 1.1 93/11/10 10:11:37 leith Exp $*/
d4 1
d37 1
d41 1
a41 19
 /* external function prototypes */
 extern Widget wid_rowcol   (Widget, char , int, int);
 extern Widget wid_togglemen(Widget, Widget, char *, int, int, int);
 extern Widget wid_textboxb (Widget, Widget, char *, char *,  int);
 extern Widget wid_labelg   (Widget, Widget, char *, int, int);
 extern Widget wid_dialog   (Widget, Widget, char *, int, int);
 extern Widget wid_stdbut   (Widget, Widget, Widget*, Widget*, Widget*, 
                             char *, void (*)(), void (*)(), void (*)(),
                             void (*)());
 extern void   spout        (char *);
 extern void   fin_cb       (Widget, caddr_t, caddr_t);
 extern int    getcorner    (Widget, Widget , int *, int *);
 extern int    mont2        (void);
 extern int    closefile    (FILEDATA *);
 extern int    numdig       (int, int);
 extern void   expos_cb     (Widget, caddr_t, caddr_t);
 extern void   catmen       (void);

 /* internal function prototypes */
d194 2
a195 2
 /* display the montage */
 mont2();
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
/*$Header$*/
d55 1
d213 4
@
