head	1.5;
access;
symbols
	pre-tilt-improve:1.4
	pre_surf_fromtop:1.4
	pre_neednewmap:1.4
	pre_apppluss_remove:1.4
	pre_tiltpair_chng:1.4
	pre_GPL:1.3;
locks;
comment	@ * @;


1.5
date	2018.12.07.17.03.32;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2005.10.18.16.59.47;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	95.01.23.10.21.56;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	94.05.19.17.14.04;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	93.11.10.10.11.12;	author leith;	state Exp;
branches;
next	;


desc
@@


1.5
log
@bollingers_email_and_cosmetic
@
text
@
/*$Header: /usr8/web/src/RCS/itex.c,v 1.4 2005/10/18 16:59:47 leith Exp $*/

/*
 * itex.c
 *
 ***********************************************************************
 C=* FROM: WEB - VISUALIZER FOR SPIDER MODULAR IMAGE PROCESSING SYSTEM *
 C=* Copyright (C) 1992-2005  Health Research Inc.                     *
 C=*                                                                   *
 C=* HEALTH RESEARCH INCORPORATED (HRI),                               *   
 C=* ONE UNIVERSITY PLACE, RENSSELAER, NY 12144-3455.                  *
 C=*                                                                   *
 C=* Email:  spider@@wadsworth.org                                      *
 C=*                                                                   *
 C=* This program is free software; you can redistribute it and/or     *
 C=* modify it under the terms of the GNU General Public License as    *
 C=* published by the Free Software Foundation; either version 2 of    *
 C=* the License, or (at your option) any later version.               *
 C=*                                                                   *
 C=* This program is distributed in the hope that it will be useful,   *
 C=* but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 C=* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 C=* General Public License for more details.                          *
 C=*                                                                   *
 C=* You should have received a copy of the GNU General Public License *
 C=* along with this program; if not, write to the                     *
 C=* Free Software Foundation, Inc.,                                   *
 C=* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.     *
 C=*                                                                   *
 ***********************************************************************
 *
 * 
 * 
 * PURPOSE:  Callback routine for Text selection in Command pulldown
 *           menu     
 * 
 * PARAMETERS:	Widget 		iw_temp		pushbutton (not used)
 *		void *		data		label text string
 *		void *		call_data	not used 
 *
 ***********************************************************************
*/

#include "x.h"
#include "std.h"
#include "common.h"
#include "routines.h"
#include "posiz.h"



 /* internal functions */
 static void     itex_cb   (Widget, void *, void *);
 static void     itex_pop  (Widget, XEvent *, String *, Cardinal *);
 static void     itex3     (void);

 /* common variables */



 /* file variables */
 char            label_string[] = "Enter text";  /* label for text widget  */
 Widget          iw_text, iw_posiz;
 XmFontList      font_list;
 int             ixtext;           /* x coord for text       */
 int             iytext;           /* y coord for text       */
  

/************************  itex  ************************************/

 void itex(Widget iw_temp, void * data, void * call_data)
 {

 /* open a message window with the following strings */
 showbutx("Set text location with mouse.",
          "Enter text coordinates.",
          "Stop this routine.", FALSE);

 /* set the actions for right, left, and center buttons */
 actions(iw_win, "itex_pop", itex_pop, "123");
 }



 /********************* itex_pop  ************************/

 void itex_pop(Widget iw_t, XEvent *event, String *params,
                  Cardinal *num_params)
 {
 int ixt, iyt, idum; 
 
 if (!(strcmp(*params,"1")))                  /* button 1 pushed */
    {
    /* get mouse position */
    getloc(event,'B',&ixtext,&iytext);

   /* create text input box */
    iw_text = wid_text(iw_win, iw_text, label_string, (char *) NULL,
                       *itex_cb, NULL, ixtext, iytext);
    }


 else if (!(strcmp(*params,"2")))            /* button 2 pushed */
    {
    /* get mouse position */
    getloc(event,'B',&ixt,&iyt);

    /* query position */
    iw_posiz = wid_posiz(iw_win, iw_posiz, ixt, iyt,  idum, idum, 
                         'P', itex3);
    }


 else if (!(strcmp(*params,"3")))            /* button 3 pushed */
    {
    /* uninstall translations */
    XtUninstallTranslations(iw_t);

    /* unmanage information box */
    showbutx("","","",TRUE);
    }

 }


 /**********************  itex_cb  *********************************/

 void itex_cb(Widget iw_temp, void * data, void * call_data)
 {
 XmString    txt_string;
 char        *text;

 XmSelectionBoxCallbackStruct *cbs =
      (XmSelectionBoxCallbackStruct *) call_data;
 
 txt_string = cbs -> value;
 text = extractstr(cbs -> value);

 /* write text in current color */
 witext(icontx, text, ixtext, iytext, 0, 0, -9, 2, FALSE);
 }


 /****************  itex3 (runs after wid_posiz) *****************/

 void itex3(void)
 {

 ixtext = ix_posiz;
 iytext = iy_posiz;

 /* create text input box now */
 iw_text = wid_text(iw_win, iw_text, label_string, (char *) NULL,
                    itex_cb, NULL, ixtext, iytext);
 
 }
@


1.4
log
@GPL
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/itex.c,v 1.3 95/01/23 10:21:56 leith Exp $*/
d39 2
a40 2
 *		caddr_t		data		label text string
 *		caddr_t		call_data	not used 
d47 1
d49 1
d54 3
a56 3
 void            itex_cb   (Widget, caddr_t, caddr_t);
 void            itex_pop  (Widget, XEvent *, String *, Cardinal *);
 void            itex3     ();
a58 3
 extern Widget   iw_win;           /* image window           */
 extern Display  *idispl;          /* current display        */
 extern GC       icontx;           /* usual graphics context */
a59 2
 extern int      ix_posiz;         /* x coord from wid_posiz */
 extern int      iy_posiz;         /* y coord from wid_posiz */
d72 1
a72 1
 void itex(Widget iw_temp, caddr_t data, caddr_t call_data)
d129 1
a129 1
 void itex_cb(Widget iw_temp, caddr_t data, caddr_t call_data)
d147 1
a147 1
 void itex3()
@


1.3
log
@ shortened name of extractstring to extractstr
@
text
@d2 1
a2 1
/*$Header: /net/alwyn/usr1/web/src/RCS/itex.c,v 1.2 94/05/19 17:14:04 leith Exp Locker: leith $*/
d8 23
a30 6
 * COPYRIGHT (C)1992, WADSWORTH CENTER FOR LABORATORIES AND
 * RESEARCH, NEW YORK STATE DEPARTMENT OF HEALTH, ALBANY, NY 12201.
 * THE CONTENTS OF THIS DOCUMENT ARE PROPRIETARY TO THE CENTER FOR     
 * LABORATORIES AND RESEARCH AND ARE NOT TO BE DISCLOSED TO OTHERS OR  
 * USED FOR PURPOSES OTHER THAN INTENDED WITHOUT WRITTEN APPROVAL OF 
 * THE CENTER FOR LABORATORIES AND RESEARCH 			  
@


1.2
log
@removed call to checkcom
@
text
@d2 1
a2 1
/*$Header: /alwyn/usr1/web/RCS/itex.c,v 1.1 93/11/10 10:11:12 leith Exp $*/
d30 1
a33 13
 /* function prototypes */
 extern void     showbutx   (char *, char *, char *, int);
 extern void     actions    (Widget, char *, void (*)(), char *);
 extern void     outmess    (char *);
 extern Widget   wid_posiz  (Widget, Widget, int, int,  int, int, 
                               char, void (*)());
 extern Widget   wid_text   (Widget, Widget, char *, char *, 
                             void (*)(),  caddr_t, int, int);
 extern void     getloc     (XEvent *, char, int *, int *);
 extern char *   extractstring (XmString);
 extern void     witext     (GC, char *, int, int,int, int, 
                               int, int, int);

d124 1
a124 1
 text = extractstring(cbs -> value);
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
/*$Header$*/
a44 1
 extern int      checkcom   ();
a45 1

a71 2

 if (!checkcom()) return;
@
